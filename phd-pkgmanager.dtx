% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-pkgmanager --- a package to shorten preambles
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a phd for defining a class.
%</readme>
%<*readmemd>
###The `phd` LaTeX2e package

The `phd` latex package and the class with the same name provide
convenient methods to create new styles for books, reports
and articles. It also loads the most commonly used packages 
and resolves conflicts.

This work consists of the file  `phd.dtx`,
and the derived files   `phd.ins`,  `phd.pdf`, and `phd.sty`.

###Installation

run
          phd-lua.bat on windows
           pdflatex phd.dtx
           makeindex -s gind.ist -g phd 

If you have any difficulties with the package come and join us at
http://tex.stackexchange.com and post a new question or
add a comment at http://tex.stackexchange.com/a/45023/963.
or send me a message at  yannislaz at gmail.com

### Documentation

The package was written using the `doc` and `docscript` packages,
so that it is self documented in a literary programming style. 
The .pdf is a fat document, providing over fifty book styles (the
equivalent of classes) plus there is a lot of write-up on the inner
workings of TeX and LaTeX2e. However, you don't need to know much
to use it.

      \usepackage{phd}
      \input{style13}

All choices, are made via an extended key-value interface. 
Although not a compliment, it resembles CSS and the keys are a bit verbose but
attributes are easy to change and have a consistent and easy to remember interface.

To set or add a key we only use one command:

      \cxset{chapter name font-size: Huge,
             chapter number font-size: HUGE} 

### Future Development

This is still an experimental version, but I will retain the
interface in future releases. There is a large amount of
work still to be carried out to improve the template styles
provided, to test it more thoroughly and to add a number of
improvements in the special designs. At present I estimate
that I have completed about 70% of the work that needs
to be done.

__The package as it stands is not production stable.__ 


%</readmemd>
%
%<*TODO>
1. On final round add pkg options. This was left as last in order not to solve problems by adding
    options. Too many options are not a good User Interface.
2.  Finish symbol management, both text and math. Math already 60% incorporated.
3.  Better integration of indexing commands.   
4.  Revisit layout manager for Chapters. Broke again in tests.
5.  Docs. Add all references.
6.  Incorporate phd class for more flexibility.
7. Improve package manager.
8. Group script loading for better font management.
9. General font management to relook it again.
10. Add all style sections (about 100 already prepared). Once they
     are all working issue beta version.
%</TODO>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd --- A package to beautify documents.
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble

%\BaseDirectory{C:/users/admin/my documents/github/phd}
%\usedir{MWE}
\generate{\file{\jobname.sty}{
  \from{\jobname.dtx}{PKG}}
  }

%\nopreamble\nopostamble

%</install>

%<install>\endbatchfile
%<*internal>
%\usedir{tex/latex/phd}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble

\generate{
	\file{README.txt}{\from{\jobname.dtx}{readme}}
  }

\generate{
  \file{README.md}{\from{\jobname.dtx}{readmemd}}
}
\generate{
  \file{TODO.tex}{\from{\jobname.dtx}{TODO}}
}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>

%\listfiles
%gdef\@onlypreamble{} % TO BE REMOVED NEEDED FOR TUTS
\documentclass[oneside,11pt,a4paper]{ltxdoc}
\usepackage[bottom=2cm]{geometry}
\savegeometry{std}
% \usepackage[style=mla]{biblatex}
\usepackage{phd}
%\usepackage{phd-pkgmanager}
%\usepackage{pkgindoc}             %%% danger
\sethyperref

 
\begin{document}
\let\bold\bfseries

\frontmatter
\tableofcontents
\mainmatter
\DocInput{\jobname.dtx}
% \printindex
 \end{document}
 %
% 
%</driver>
% \fi
% 
%  \CheckSum{0}
%  \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
%
% \changes{1.0}{2013/01/26}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
% \GetFileInfo{phd.dtx}
% 
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{phd} package.
% \thanks{This
%        file (\texttt{phd.dtx}) has version number \fileversion, last revised
%        \filedate.}
% }
% \author{Dr. Yiannis Lazarides \\ \url{yannislaz@gmail.com}}
% \date{\filedate}
%
%
% 
% ^^A\maketitle
% 
% ^^A\frontmatter
%  ^^A\coverpage{./images/hine02.jpg}{Book Design }{Camel Press}
%  \newpage
% ^^A\secondpage
% \pagestyle{empty}
%
%
% 
%
%
% \pagestyle{headings}
% \raggedbottom
%  ^^A\OnlyDescription
%
%  ^^A\StopEventually{\printindex}

% \CodelineNumbered
% \pagestyle{headings}
% 
%<*PKG>
% \part{IMPLEMENTATION}
% 

% \chapter{Implementation Strategy}
%
% The implementation is divided into parts. Perhaps cutting,
% these parts into smaller packages might have been a better
% choice, but as the aim of the package is to minimize
% the loading of packages and let |phd| to handle
% this, it made more sense to me, anyway to keep everything
% together.
% 	
%
% \begin{description}
%
%  \item[The Package Manager] This section is responsible 
%       for pre-loading  packages, resolving conflicts and 
%       providing all interfacing commands.
%
%  \item[The Sectioning Layouts Manager] This section manages 
%       the design of complex layouts for sectioning commands.
%
%  \item [The Image Page Manager] This section manages the design of 
%       pages that consist primarily of images and complex
%		page layouts.
%
%  \item[Common Macros] We provide a number of predefined commands
%		for macros that us and other people found useful.
%
%  \item[MWE] The package generates a large number
%		of Minimum Working Examples that we use for testing. 
%		Most of them can also used as examples for training 
%		or self-study.
%
% \end{description}
%
% \section{Preliminaries}
%
% The basic requirement for the Package Manager is to load
% an adequate number of packages to enable the typesetting
% of a diverse number of large documents without requiring
% additional packages to be loaded by typical groups of
% authors. This has its advantages, but of course it does 
% slow things down. A long term objective is to select
% packages depending as an option on the type of document
% being prepared.
%
% \subsection{Preliminaries}
%
%    Standard file identification. We first announce the package 
%	 and require that it be used with \LaTeX2e. 
%
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[1994/12/01]%
\ProvidesFile{phd-packagemanager}[2015/1/13 v1.0 less preamble (YL)]%
\let\ltxtoday\today
%    \end{macrocode}

% Load the package \pkgname{fixltx2e} to update \LaTeX2e for various fixes. The package fixes a number things in the LaTeX2e kernel. Due to LaTeX's stability policy, these corrections have not been incorporated into the LaTeX2e kernel, but this package does things most people would agree are bugfixes. So to load this package is always recommended for newly created documents. The corrections have no commonalities, but the package's description has a nice summary:
%
%ensure one-column floats don't get ahead of two-column floats;
%correct page headers in twocolumn documents;
%stop spaces disappearing in moving arguments;
%allowing |\fnsymbol| to use text symbols;
%allow the first word after a float to hyphenate;
% cs{emph} can produce caps/small caps text;
%bugs in \cs{setlength} and \cs{flushbottom.}
% 
%    \begin{macrocode}
\RequirePackage{fixltx2e}[2006/03/24]
% mock chapters where necessary
\@ifundefined{c@chapter}{%  
      \newcounter{chapter}
      \def\thechapter{\@arabic\c@chapter}
}{}
%    \end{macrocode}
% We load the \pkg{pgf} package early so we can use it for key management.
% We create a family for keys, unimaginatively named phd. 
% This might  change in the future.
%
% \chapter{Package Management} 
%  
% \parindent1em 
%
% The Package Manager specification requires to meet the following requirements:
% \begin{description}
%   \item [{\bfseries Loading of packages}] Provide an extended package mechanism to load
%            conditionally a number of packages.
%   \item [{\bfseries Manage conflicts}] Manage conflicting packages by loading them in 
%           the right sequence to enable critical redefinitions.
%   \item [{\bfseries Keep track}] Track all files loaded, by this package and those loaded
%           by others.
%  \item [{\bfseries Utilities}] Provide utilities to save and restore commands and symbols
%          that create conflicts.
%  \item [{\bfseries User}] Allow the user to load more packages via the extended package
%           loading mechanism.
% \end{description} 
%
% \section{Utilities}
%
% In order to keep track of all the packages and keys we require a
% number of macros will be defined first.
% 
% Each of the packages used by this document is loaded conditionally.
% However, it might be nice to know if we have a complete set.  So we
% define |\ifcomplete| which starts true, but gets set to false if any
% package is missing. Some code is necessary in order to manage 
% the complexity.
% I am indebted to the source of |symbols.tex| for some of the macros.
% There are a number of symbols (e.g., \cmd{\Square}) that are defined by      
% multiple packages.  In order to typeset all the variants in this       
% document, we have to give glyph a unique name.  
% To do that, we define :
%
% 
% \cs{savesymbol{XXX}}, which renames a symbol from \cs{XXX} to \cmd{\origXXX}, and    
% |\restore_symbol:{yyy}{XXX}}|, which renames \cmd{\origXXX} back to \cmd{XXX} and     
% defines a new command, |\yyyXXX|, which corresponds to the most recently 
% loaded version of |\XXX|.                                                
%                                                                        
% This implementation of \refCom{save_symbol:} and \refCom{restore_symbol:} was copied from  
% the |savesym| package, which started with symbol.tex's old definitions   
% of those macros and improved upon them.  However, \renamerobustsymbol  
% and |\ifnotsavedsym| are from  the list of |symbols| documentation.                                
%                                                                        
% \begin{docCommand} {g_phd_packages_loaded_clist} {\marg{clist}}
%    Holds a list of all packages loaded by the \pkgname{phd} package.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\clist_new:N \g_phd_packages_loaded_clist
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {g_phd_packages_loaded_clist} {\marg{clist}}
%    Holds a list of all packages loaded by the \pkgname{phd} package.
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\clist_new:N \g_phd_packages_not_found
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{docCommand} {g_phd_packages_loaded_by_others} { \marg{clist} }
%    Holds a list of all packages loaded by the \pkgname{phd} package.
% \end{docCommand}
%
%    \begin{macrocode}
\ExplSyntaxOn
\clist_new:N \g_phd_packages_loaded_by_others
\ExplSyntaxOff
%    \end{macrocode}
% 
% These are really long names, but I want to follow the \latex3 Teams' suggestions
%  and recommendations.
%
% \begin{docCommand} {save_symbol:} { \meta{symbol name} }
%  An explorified version of |savesymbol|. In the old style the original
%  command was set to relax, this caused errors and I set it to undefine. The
%  joys of \tex programming! \FIRE
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \save_symbol: #1
  {
    \cs_gset_eq:cc {orig#1} {#1} 
    \cs_undefine:c {#1}
  }
\ExplSyntaxOff
%    \end{macrocode}
% 
%    
%
% \begin{docCommand} {restore_symbol:} { \meta{symbol prefix} \meta{symbol name} }
% 	Restore a previously saved symbol, and rename the current one.
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_new:Npn \restore_symbol: #1 #2
  {
    \cs_gset_eq:cc {#1#2} {#2}
    \cs_gset_eq:cc {#2} {orig#2}
 }
\ExplSyntaxOff
%    \end{macrocode}  
% 
 
% Rename a robust command.
%    \begin{macrocode}
\newcommand*{\renamerobustsymbol}[2]{%
  \expandafter\let\expandafter\origrealcommand
    \csname #2\space\endcsname
    \expandafter\global\expandafter\let\csname#1#2\endcsname=\origrealcommand
}
%    \end{macrocode}
% Test if a symbol is not saved.
%    \begin{macrocode}
\def\ifnotsavedsym@helper#1#2!{\expandafter\ifx\csname orig#2\endcsname\relax}
\newcommand*{\ifnotsavedsym}[1]{%
  \expandafter\ifnotsavedsym@helper\string#1!%
}
%    \end{macrocode}
% {ifcomplete}
%    \begin{macrocode}
\let\oldcontentsline\contentsline
\newif\ifcomplete
%    \end{macrocode}
%    
%
%    \begin{macrocode}
\ExplSyntaxOn
\global\let\origRequirePackage\RequirePackage
\DeclareDocumentCommand\RequirePackage {o m o}
  {
     \IfValueTF{#3}
       {\IfValueTF {#1}
           { \origRequirePackage [{#1}] {#2} [{#3}] }
           { \origRequirePackage {#2} [{#3}]      }
       }
       {   
        \IfValueTF{#1}
           {
             \origRequirePackage  [{#1}] {#2} 
           }
           { 
             \origRequirePackage {#2}      
           }
      } 
  }       

    
\ExplSyntaxOff  
%    \end{macrocode} 
%    
% For debugging purposes we define a switch that enables us to toggle
% on and off the loading of packages.
% 
%    \begin{macrocode}
\newif\ifloadpackages
\loadpackagestrue
%    \end{macrocode}
%    
% |\IfStyFileExists*| is just like |\IfFileExists|, except that it appends
% ".sty" to its first argument.  |\IfStyFileExists| is the same as
% |\IfStyFileExists*|, but it additionally adds its first argument to a list
% (|\missingpkgs|) and marks the document as incomplete (with
% |\completefalse|) if the |.sty| file doesn't exist.
% 
% {missingpkgs}
% {foundpkgs}
%   \begin{macrocode}
\newcommand{\missingpkgs}{}
\newcommand{\foundpkgs}{}
\newcommand{\if@sty@file@exists@star}[3]{%
  \ifloadpackages
    \IfFileExists{#1.sty}{#2}{#3}%
  \else
    #3%
  \fi
}
\newcommand{\if@sty@file@exists}[3]{%
  \ifloadpackages
    \IfFileExists{#1.sty}%
                 {#2\@cons\foundpkgs{{#1}}}%
                 {#3\completefalse\@cons\missingpkgs{{#1}}}%
  \else
    #3\completefalse\@cons\missingpkgs{{#1}}%
  \fi
}
\newcommand{\IfStyFileExists}{%
  \@ifstar{\if@sty@file@exists@star}{\if@sty@file@exists}%
}
%    \end{macrocode}
% 
% 
%
% \section{Utility macros for displaying symbols and fonts}
%
% In the sections that follow, we use a number of utilities for
% displaying fonts and utilities in tables and figures, we collect
% them here and make them available to the user for document
% use. Many are modifications from other packages.
%
%    \begin{macrocode}
% From stmarysrd symbols package
% A very convenient command to typeset symbols.
% Much preferable than tables. Slight modifications to
% make it a bit more clear
% CHECK END SYMBOLS
\newcommand\symbols{\flushleft}
\def\endsymbols{\endflushleft}

\def\dosymbol#1{%
   \leavevmode\hbox to .33\textwidth{%
    \hbox to 1.2em%
    {\hss$#1$\hfil}%
   \footnotesize\texttt{\string#1}\hss}%
   \penalty10}
%    \end{macrocode}
% 
% 
%
%  \section{calligra}
%  Calligra is a calligraphic font, we also declare it as a math alphabet, 
%  I think we now have enough.
%    \begin{macrocode}
\ExplSyntaxOn
\IfStyFileExists{calligra}
  {\save_symbol:{filename}
   \RequirePackage{calligra}
   \restore_symbol:{CAL}{filename}
   \DeclareMathAlphabet{\mathcalligra}{T1}{calligra}{m}{n}
   \DeclareFontShape{T1}{calligra}{m}{n}{<->s*[2.2]callig15}{}
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
%
% Fonts sup­ported are Peter Van­roose's cal­ligra font (pack­age fun­dus-\pkgname{cal­ligra)}; the 
% em­u­la­tion of Peter Van­roose’s hand­writ­ing (pack­age \pkgname{fun­dus-script}; the Wash­ing­ton 
% Univer­sity cyril­lic fonts (pack­age \pkgname{fun­dus-cyr}); 
% the \pkgname{la} and \pkgname{lla} chil­dren's hand­writ­ing
% fonts (pack­age fun­dus-la); the Com­puter Modern out­line fonts (pack­age fun­dus-out­
% line); a group of ‘Startrek’ fonts (pack­age fun­dus-startrek, which con­tains the fonts
% it sup­ports; the Süt­ter­lin font (pack­age fun­dus-sueter­lin; the twcal cal­li­graphic
% fonts (pack­age fun­dus-twcal); and the va hand­writ­ing font (pack­age fun­dus-va).

% \section{Chancery}
%
%    \begin{macrocode}
\IfStyFileExists{chancery}
  {\newcommand{\mathpzc}[1]{\mbox{\usefont{OT1}{pzc}{m}{it}##1}}}
  {}
%    \end{macrocode}
% \section{Best practices macros} 
% 
%  
% We load a few packages for fixes and errors and |nag| if outdated packages are used.
% Modify to suit your requirements.  
% Package management is a bit complex to avoid errors
% with options.
%
%To find out if a package has already been loaded, use
%|\@ifpackageloaded|\meta{package}\meta{true}\meta{false}.
%|\@ifpackagelater| To find out if a package has already been loaded with a version more recent
%|\@ifclasslater| than version, use |\@ifpackagelater|\meta{hpackagei}\meta{version}\meta{true}\meta{false}.
%|\@ifpackagewith| To find out if a package has already been loaded with at least the options
%options, use |\@ifpackagewith|\meta{package}\meta{options}\meta{true}\meta{false}.
% 
%There exists one package that can't be tested with the above commands: the
%fontenc package pretends that it was never loaded to allow for repeated reloading
%with different options (see ltoutenc.dtx for details).
% 
% 
% We include the following two packages to provide the standard 
% fixes for \LaTeX2e\ and the |nag| package to provide some guidance
% as to good
% practices. We set the |nag| keys to |orthodox| and |l2tabu.|
% \url{http://tex.stackexchange.com/questions/19264/techniques-and-packages-to-keep-up-with-good-practices?rq=1}
% and \href{http://stackoverflow.com/questions/193298/best-practices-in-latex}{best practices in LaTeX.}
%
%
% \begin{environment}{etex}
%    \begin{macrocode}
\ifxetex
   \else
     \ifluatex
        \RequirePackage{etex}
     \else
        \RequirePackage{etex}
  \fi
\fi
%    \end{macrocode}
% \end{environment}
%

%    \begin{macrocode}
\cxset{nag keys/.store in =\nagkeys@cx,
       onlyamsmath keys/.store in=\onlyamsmathkeys@cx,
       xcolor keys/.store in=\xcolorkeys@cx}
%        
%
%\input{settings} % experimental
%    \end{macrocode}
%\cxset{nag keys = {l2tabu,%
%                   orthodox,%
%                   %
%                  }}
%
% {xcolor}
% 	For |xcolor| we try and load as many pre-defined colornames as
% 	possible.
%    \begin{macrocode}
\cxset{xcolor keys={fixpdftex,usenames,dvipsnames,
                  svgnames,x11names,table}}                     
% Set amsmath keys
%
%    \end{macrocode}
% 
%
%    \begin{macrocode}
% \PassOptionsToPackage{\nagkeys@cx}{nag}
% \RequirePackage{nag}   
%    \end{macrocode}
%
%
%
% {onlyasmath}
% The package |onlyasmath| also provides errors for deprecated math
% commands like using |$$|\ldots|$$| which can result in unwanted spaces
% being introduced in the typsetting of the document. The recommended 
% way is to use |\[|\ldots|\]|. The package was developed by Harold Harders
% and although targetted for class writers one might as well use it directly.
%
%% |\PassOptionsToPackage{\onlyamsmathkeys@cx}{onlyamsmath}|
% |\RequirePackage{onlyamsmath} |
% 
%
% \section{Typography}
%
% The package \pkgname{microtype} is loaded with no options
% as it provides facilities for loading individual features
% at run time. (This enables the use of phd keys).
%  The package had some issues with LuaLaTeX and  XeTeX
%  but now it works as advertized. As it is a great package we include it here.
%
% \subsection{Microtypography}
% With LuaTeX microtype must come after fontspec.
%    \begin{macrocode}
% 
\ifMICROTYPE
\ifengine%
	  {\RequirePackage[tracking=true]{microtype}}%
	  {\RequirePackage[tracking=true]{microtype}}%
	  {\RequirePackage[tracking=true]{microtype}}%
\fi	  
%
%    \end{macrocode}
% 
%
% \subsection{ragged2e}
%
% We load \pkgname{ragged2e} package for typography
%
% 
%
% This package by Martin Schr\"oeder provides new commands and environments for
% setting ragged text which are easy to configure to allow hyphenation. The
% way Martin explains it, the main purpose of the package is to restore the
% plain TEX definitions which have been changed by LaTex2e. On the way it
% defines a number of useful environments. The package also loads the
% |footmisc| package if loaded with the option |footnotes|. Hm.. It also
% loads the package |everysel|. More fun. Passing of options, should be in 
% a settings file? \index{justification>ragged}
% \index{justification>ragged2e (package)}
% 
%
%
%    \begin{macrocode}
\newif\ifRAGGEDTWOE
\newif\ifEVERYSEL
\newif\ifFOOTMISC
\PassOptionsToPackage{ragged2e}{footnotes,raggedrightboxes}
\RequirePackage{ragged2e}
%    \end{macrocode}
% 
%
% \subsection{soul}
% We load the \pkgname{soul} for spacing out and for
% highlighting words. We do not pass any options. These
% are left to the user.
%
% \begin{docCommand}{sethlcolor} {\marg{color name} }sets
% the color for soul's \hl{highlight} command \cmd{\hl}.
% \end{docCommand}
%    \begin{macrocode}
\newif\ifSOUL
\IfStyFileExists{soul}
{\SOULtrue\RequirePackage{soul}
    \sethlcolor{thehighlight}}
{}
%    \end{macrocode}
% 

% \subsection{lettrine} 
%  
% We use the |lettrine| package of Daniel Flipo for drop caps. We do not pass any
% defaults and leave it to the configuration file. The lettrine configuration
% file is |lettrine.cfg|. We define a command \cs{dropcap} for some settings
% that we think are generally acceptable. 
%
%    \begin{macrocode}
\RequirePackage{lettrine}
\ifx\dropcap\undefined
  \def\dropcap#1#2{%
    \lettrine[lines=3, lraise=0.1, nindent=0em, slope=.1em]{#1}{#2}
  }%
\fi
%    \end{macrocode}
%
% \subsection{Units and formatting of numbers}
% 
% We load the defacto standard \pkgname{siunitx} for formatting units in SI units. Note
% it loads LaTeX3 packages.
%
% \subsubsection{siunitx}
% {numprint} The package \pkg{numprint} has some
% useful macros for formatting large numbers. We use it for some
% of the examples.
%    \begin{macrocode}
\IfStyFileExists{siunitx}{
   \RequirePackage{siunitx}
   \sisetup{fixed-exponent =0,
            scientific-notation = false}}
{}           
%\RequirePackage{numprint} 
%    \end{macrocode}
% 
% 
%
%
% \subsection{Acronyms}
%
% For acronyms and abbreviations we load the \pkgname{acronym} package
% by Tobias Oetiker \citeyearpar{acronym}. This package makes sure, that all acronyms used 
% in the text are spelled out in full at least once. In one of its
% options it loads the |relsize| package. My recommendation is to
% load the package with the options |smaller, printonly| and 
% |withpage|. Please note that the |withpage| option only works, if the
% |printonlyused| option is present. \FIRE loads relsize,suffix,xstring 
% 
%    \begin{macrocode}
\cxset{acronym keys/.store in = \acronymkeys@cx}
\cxset{acronym keys={smaller,printonlyused,withpage}}
\PassOptionsToPackage{\acronymkeys@cx}{acronym}
\RequirePackage{acronym}
%    \end{macrocode}
%
% \subsection{mdframed}
% This package is included here, as a more lightweight package to |tcolorbox|
%    \begin{macrocode}
\RequirePackage{mdframed}
\RequirePackage{adjustbox}
\RequirePackage{fancybox}
%    \end{macrocode}
% 
% 
% \section{Graphics}
% 
%  The package \pkg{graphicx} developed by David Carlisle and Sebastian Rahtz is 
%  part of t  e 
%  Standard LaTeX `Graphics Bundle'.  It provides extensions to the original
% \pkg{graphics}, which it loads. The \pkg{graphics} in its turn loads
% the package \pkg{trig} which helps with trigonometrical
% calculations.
%
% We load the package |graphicx| with no options. We let |graphicx|, to 
% handle any draft options via the class itself. 
% \href{http://tex.stackexchange.com/questions/3131/graphicspath-for-miktex}{graphicspath for MikTeX} check
% adds figures etc to paths. 
% 
% \begin{docCommand} {DeclareGraphicExtensions} { \meta{extensions} } 
%   We define some common paths and extensions. 
%   to enable the user to just call he image without specifying the extension or
%   folders.
% \end{docCommand}
%
% \begin{docCommand} {graphicspath} { \meta{paths} } 
%   Declares various paths. 
% \end{docCommand}
%
% 
%    \begin{macrocode}
\RequirePackage{graphicx}[1999/02/16]
\DeclareGraphicsExtensions{.jpg, .JPG, .jpeg, .png, .eps}
\graphicspath{{graphics/}{graphics//}{../images/}{images//}{./images/}{./graphics/}%
   {../graphics/}{./pic/}{../pic}}
%    \end{macrocode}
% 
% 
%
% Various `keys' or named arguments are supported.
% \begin{description}
% \item[bb] Set the bounding box. The argument should be four
% dimensions, separated by spaces. 
% \item[bbllx,bblly,bburx,bbury] Set the bounding box. Mainly for
% compatibility with older packages. |bbllx=a,bblly=b,bburx=c,bbury=d|
% is equivalent to |bb = a b c d|.
% \item[natwidth,natheight] Again an alternative to |bb|. 
% |natheight=h,natwidth=w| is equivalent to |bb = 0 0 h w|.
% \item[viewport] Modify the bounding box specified in the file.
% The four values specify a bounding box \emph{relative} to the
% |llx|,|lly| coordinate of the original box.
% \item[trim] Modify the bounding box specified in the file.
% The four values specify the amounts to remove from
% the left, bottom, right and top of the original box.
% \item[hiresbb] Boolean valued key. Defaults to |true|. 
% Causes \TeX\ to look for |%%HiResBoundingBox| comments rather than
% the standard |%%BoundingBox|. May be set to |false| to override
% a default setting of true specified by the |hiresbb| package option.
% \item[angle] Rotation angle.
% \item[origin] Rotation origin (see |\rotatebox|, below).
% \item[width] Required width, a dimension (default units |bp|). The
% graphic will be scaled to make the width the specified dimension.
% \item[height] Required height. a dimension (default units |bp|).
% \item[totalheight] Required totalheight (ie height $+$ depth). a
% dimension (default units |bp|). Most useful after a rotation (when the
% height might be zero).
% \item[keepaspectratio] Boolean valued key (like |clip|). If it is set
%  to true, modify the meaning of the |width| and |height| (and
% |totalheight|) keys such that if both are specified then rather than
% distort the figure the figure is scaled such that neither dimension
% \emph{exceeds} the stated dimensions.
% \item[scale] Scale factor.
% \item[clip] Either `true' or `false' (or no value, which is equivalent
% to `true'). Clip the graphic to the bounding box (or viewport if one
% is specified).
% \item[draft] a boolean valued key, like `clip'. locally switches to
% draft mode, ie.\ do not include the graphic, but leave the
% correct space, and print the filename.
% \item[type] Specify the file type. (Normally determined from the file
% extension.) 
% \item[ext] Specify the file extension.
%        \emph{Only} for use with |type|.
% \item[read] Specify the `read file' which is used for determining the
% size of the graphic. \emph{Only} for use with |type|.
% \item[command] Specify the file command.
%         \emph{Only} for use with |type|.
% \end{description}
%
% The arguments are interpreted left to right. |clip|, |draft|, |bb|,,
% and |bbllx| etc.\ have the same effect wherever they appear. but the
% scaling and rotation keys interact.
%
% \section{wrapfig} The package \pkg{wrapfig} is loaded next. 
% 
%    \begin{macrocode}
\RequirePackage{wrapfig}
%    \end{macrocode} 
% 
%
% \section{rotating}
% The package \pkgname{rotating} performs
% most sorts of rotation one might like, including rotation of complete floating
% figures and tables. The package was developed by Robin Fairbairns
% Sebastian Rahtz and Leonor Barroca. We use the option |quiet| as the 
% package is rather verbose.
%
%    \begin{macrocode}
\RequirePackage[quiet]{rotating}
%    \end{macrocode} 
% 
% 

%
% \section{Rules}
% We need to define a number of rules to use in typesetting styles.
%	We will use later on different styles of rules to decorate chapter headings.
%	We define a few here to simplify code later on.
%
%    \begin{macrocode}
\DeclareRobustCommand\thickrule{%
    \leavevmode \leaders \hrule height 2pt \hfill \kern \z@}
\DeclareRobustCommand\thinrule{\vrule width\textwidth height0.4pt depth0pt\relax}%
%
\DeclareRobustCommand\mediumrule{\rule{\textwidth}{0.8pt}}
%    Adjusted to get toc parameters in
\DeclareRobustCommand\Rule{{\color{\tocchapternumberfill@cx}\rule[-4.1pt]{13cm}{0.4pt}}}
\DeclareRobustCommand\bottomline{\medskip
   \noindent\rule{\linewidth}{0.4pt}\medskip}
\DeclareRobustCommand\topline{\par\medskip
   \noindent\rule{\linewidth}{0.4pt}\medskip} 
%    \end{macrocode}
% 
% 
% 
%
%  Some chapter and sectioning heads include rules, we define them here for convenience.
%
%    \begin{macrocode}
\cxset{chapter rule color/.store in={\chapter@rule@color}}%
\cxset{chapter rule color=spot!30}
\DeclareRobustCommand\tikzrule{%
  \tikz [color=\chapter@rule@color, very thick, inner sep=0pt, outer sep=0pt]%
        \draw(0,0)--(\the\linewidth,0);
}%
%  The trim left is required to align the rule exactly
%    \begin{macrocode}           
%#1  options #2 width  #3 height           
\newcommand\drawrule[3][]{%
    \offinterlineskip
          \tikz [ name=s,trim left,
                   anchor=base,
                   draw=black, 
                 % double distance=.2pt,
                  line width=#3,
                  %very thick,
                  inner sep=0pt, 
                  outer sep=0pt,#1]   \draw(0,0)--(#2,0);
}
 \def\drawdoublerule#1#2{%
    \drawrule{#1}{#2}%
    \vskip2.5pt
    \drawrule{#1}{#2}%
 }
%    \end{macrocode}
%
% \chapter{Filler Text}
%
% 	In publishing and graphic design, lorem ipsum is placeholder text (filler text) 
% 	commonly used to demonstrate the graphics elements of a document or visual 
% 	presentation, such as font, typography, and layout, by removing the distraction 
% 	of meaningful content. The lorem ipsum text is typically a section of a Latin text 
% 	by Cicero with words altered, added and removed that make it nonsensical in meaning 
% 	and not proper Latin. Other packages exist such as |kantlipsum| and |blindtext|, 
% 	however, both result in somewhat legible texts, which defeats the purpose of 
% 	providing texts that the reader is not going to read. the extensions |lipsumx| 
% 	aim at providing a gap between the three packages. It provides extensions
% 	for full document testing.
%
% \section{lipsum}
%
%    \begin{macrocode}
\newif\ifLIPSUM
\RequirePackage{lipsum}
%    \end{macrocode}
%
% \section{kantlipsum}
%    \begin{macrocode}
\RequirePackage{kantlipsum}
%    \end{macrocode}
% \section{blindtext}
%    \begin{macrocode}
\RequirePackage{blindtext}
%    \end{macrocode}
% 
% \section{phd additonal macros}
%
% \begin{docCommand}{lorem}{\meta{*} }
%	 We declare a short macro \cs{lorem} to be used for testing, as well as 
%	 testing captions and the like. The star version does not provide a par
% \end{docCommand}
%    \begin{macrocode}
\DeclareDocumentCommand\lorem{ s }{Fusce adipiscing justo nec ante. Nullam in enim.
 Pellentesque felis orci, sagittis ac, malesuada et, facilisis in,
 ligula. Nunc non magna sit amet mi aliquam dictum. In mi. Curabitur
 sollicitudin justo sed quam et quadd. 
 \IfBooleanTF{#1}%
 {}%
 {\par}}
%    \end{macrocode}
% 
%
% \begin{docCommand}{fox} {void} 
%  A classic one liner containing all the letters
%	 of the alphabet, used as a testing code.
% \end{docCommand}
%    \begin{macrocode}
\newcommand{\fox}{``The quick brown fox jumps over the lazy dog''} 
%    \end{macrocode}
% 
%
% \begin{docCommand} {frogking} { \meta {void}}
% \end{docCommand}
%    \begin{macrocode}
\newcommand\frogking{%
\leavevmode
\hskip1em In olden times when wishing
still helped one, there lived a
king whose daughters were all
beautiful, but the youngest was so
beautiful that the sun itself,
which has seen so much, was
astonished whenever it shone in
her face. Close by the king's
castle lay a great dark forest,
and under an old lime-tree in the
forest was a well, and when
the day was very warm, the
king's child went out into the 
forest and sat down by the side
of the cool fountain, and when she was bored she
took a golden ball, and threw it up on a high and caught it, and this
ball was her favorite plaything. \par}%
%    \end{macrocode}
%
%
%    \begin{macrocode}
\newcommand\onepar{In olden times when wishing
still helped one, there lived a
king whose daughters were all
beautiful, but the youngest was so
beautiful that the sun itself,
which has seen so much, was
astonished whenever it shone in
her face. Close by the king's
castle lay a great dark forest,
and under an old lime-tree in the
forest was a well, and when
the day was very warm, the
king's child went out into the 
forest and sat down by the side
of the cool fountain, and when she was bored she
took a golden ball, and threw it up on a high and caught it, and this
ball was her favorite plaything.}%

\newcommand\alicei{%	
  The King and Queen of Hearts were seated on their throne
  when they arrived, with a great crowd assembled about them
  ---all sorts of little birds and beasts, as well as the
  whole pack of cards: the Knave was standing before them,
  in chains, with a soldier on each side to guard him; and
  near the King was the White Rabbit, with a trumpet in one
  hand, and a scroll of parchment in the other.  In the very
  middle of the court was a table, with a large dish of
  tarts upon it: they looked so good, that it made Alice
  quite hungry to look at them---``I wish they'd get the
  trial done,'' she thought, ``and hand round the
  refreshments!''.  But there seemed to be no chance of this,
  so she began looking at everything about her to pass away
  the time.}%

\newcommand\aliceii{%
  Alice had never been in a court of justice before, but she
  had read about them in books, and she was quite pleased to
  find that she knew the name of nearly everything there.
  ``That's the judge,'' she said to herself, ``because of his
  great wig.''.
  
  The judge, by the way, was the King, and as he wore his
  crown over the wig, (look at the frontispiece if you want
  to see how he did it,) he did not look at all comfortable,
  and it was certainly not becoming.
}

 \newcommand\aliceiii{``And that's the jury-box,'' thought Alice, ``and those
  twelve creatures,'' (she was obliged to say ``creatures,''
  you see, because some of them were animals, and some were
  birds) ``I suppose they are the jurors.''.  She said this
  last word two or three times over to herself being rather
  proud of it: for she thought, and rightly too, that very
  few little girls of her age knew the meaning of it at all.
  However, ``jurymen'' would have done just as well.}

 \newcommand\aliceiv{The twelve jurors were all writing very busily on slates.
  ``What are they doing?'' Alice whispered to the Gryphon.
  ``They can't have anything to put down yet, before the
  trial's begun.''.}
  
\newcommand\alicev{``They're putting down their names,'' the Gryphon
  whispered in reply, ``for fear they should forget them
  before the end of the trial.''.}
  
\newcommand\alicevi{``Stupid things!'' Alice began in a loud indignant voice,
  but she stopped herself hastily, for the White Rabbit
  cried out, ``Silence in the court!''; and the King put on
  his spectacles and looked anxiously round, to make out who
  was talking.\par}
%    \end{macrocode}
%
% \section{Functions for testing fonts}
%
% This is a short assembly of commands that can be used to test fonts.
%
%    \begin{macrocode}
\def\ALPHABET {A B C D E F G H I J K L M N O P Q R S T U V W X Y Z}
\def\alphabet {a b c d e f g h i j k l m n o p q r s t u v w x y z}
\newcommand{\punctuation}{! ? . / , : }
%    \end{macrocode}
% The package fonttable provides a number of interesting testing tests
% for fonts
%
% \section{fonttable}
%  This can be used to create a font table for normal \tex fonts. Use the unicode
%  routines we provide later for unicode font tables.
%    \begin{macrocode}					
\RequirePackage{fonttable}	
%    \end{macrocode}
%

%
% \chapter{Tables}
%
% 	It is unlikely that a publication, would not have a table
% 	somewhere, to make life easier we load Simon Fear's |booktabs| \citep{booktabs}. The manual is a must
% read if you want to typeset typographically attractive tables.\footnote{Notice I haven't said
% typographically correct, there is no such thing.} We don't need to set any keys for the
% package.
%	The counter |inc| is used to increment serial numbers in tables and
%	\cs{resetinc} resets this counter to zero. 
% \section{booktabs and helper macros}
% {inc}
% {resetinc}
%
%
%    \begin{macrocode}
\RequirePackage{booktabs}
\newcounter{step}
\newcommand\resetinc{\setcounter{step}{0}}
\newcommand\inc{\stepcounter{step}\thestep}
%    \end{macrocode}
% 
% 
% 
%
%
% \subsection{tabularx}
% This package by David Carlisle's enables the typesetting of fixed width 
% tables and can stretch
% specific columns. The package loads the |array| package, but we save it from some
% trouble by pre-loading it first, so we can capture its loading. The package has two keys
% |infoshow| and |debugshow| which we don't bother at this stage to load.
% 
%    \begin{macrocode}
\RequirePackage{tabularx}
%    \end{macrocode}
% 
%
% \subsection{array}
% {delarray}
% The addition to array.sty added in delarray.sty is a system of implicit |\left|
%|\right| pairs. If you want an array surrounded by parentheses, you can enter:
%|\begin{array}({cc}) . .|
% 
%    \begin{macrocode}
% \RequirePackage{delarray} gives problems
\RequirePackage{array}
%    \end{macrocode}
% 
% 
%
% \subsection{dcolumn}
%  The |dcolumn| package also by David Carlisle is loaded next. This package 
%  defines a system for defining columns of entries in an |array|
%  or tabular which are to be aligned on a `decimal point'. It also loads the |array|
%  package, which we have already loaded.
% 
%    \begin{macrocode}
\RequirePackage{dcolumn}
\RequirePackage{rccol}
%    \end{macrocode}
% 
%
% \section{longtable}
% \makeatletter
%  The |longtable| package, needs no introduction. It has some
%  peculiar settings and sometimes a couple of runs before it settles
%  down. The package has four keys |errorshow|, |pausing|, |set| and |final| looks 
%   as if they deprecated, at this stage we make onlty a mental note of it.
%  The package cannot be used within |multicolumn| environments and will
%  emit an error. 
% 
% 
%    \begin{macrocode}
\RequirePackage{longtable}
%    \end{macrocode}
% The following environment was copied verbatim from the Comprehensive
% Symbols. I have been trying to understand it ever since.
%
%    \begin{macrocode}
\let\origLT@array=\LT@array
\let\origLT@start=\LT@start
%
\newenvironment{longsymtable}[2][true]{%
  \expandafter\global\expandafter\let
  \expandafter\ifshowsymtable\csname if#1\endcsname
  \ifshowsymtable
    \mbox{}%
    \Needspace*{1\baselineskip}%
    \mbox{}%
    \begin{center}%
    \phantomsection
    \refstepcounter{table}%
    \let\refstepcounter=\@gobble
    \let\LT@array=\origLT@array
    \let\LT@start=\origLT@start

    \addcontentsline{toc}{subsection}{%
     \protect\numberline{\tablename~\thetable:}{#2}}%
    \@makecaption{\fnum@table}{#2}%
    \gdef\lt@indexed{}%
    \let\next=\relax
  \else
    % The following was taken verbatim from verbatim.sty.
    \let\do\@makeother\dospecials\catcode`\^^M\active
    \let\verbatim@startline\relax
    \let\verbatim@addtoline\@gobble
    \let\verbatim@processline\relax
    \let\verbatim@finish\relax
    \let\next=\verbatim@
  \fi
  \next
}{%
  \ifshowsymtable
    \end{center}
    \let\@elt=\index\lt@indexed  % Close our index ranges.
    \gdef\lt@indexed{}%
    \vskip 8ex minus 2ex
  \fi
}


% Define \index-like commands for use with longsymtable that
% automatically apply to the entire table, not just the start of it.

\newcommand{\ltindex}[1]{%
  \index{#1|(}%
  \@cons{\lt@indexed}{{#1|)}}%
}
\newcommand{\ltidxboth}[2]{\mbox{}\ltindex{#1 #2}\ltindex{#2>#1}}

\let\LT@array=\origLT@array
\let\LT@start=\origLT@start
%    \end{macrocode}
%   
%
% \section{multirow}
% 
% 
% The \pkg{multirow} by Piet van Oostrum and its two companion packages
% \pkgname{bigdelim} and \pkgname{bigstrut} can be used to define multirow cells. They are difficult
% to get right and in most instances one can redesign the tables better without
% resorting to multi-rows. It has a strange interaction with the \pkgname{colortbl}
% and a hack around its usage which we will load next.
% 
%    \begin{macrocode}
% If we have type1cm.sty, use it.
 
\IfStyFileExists*{type1cm}
  {\usepackage{type1cm}}
  {}
% If we have multirow.sty, use it.
\newif\ifhavemultirow
\IfStyFileExists{multirow}
  {\havemultirowtrue
  \RequirePackage{multirow}
  }
  {}  
%    \end{macrocode}
%
% \section{colortbl}
%
%    \begin{macrocode}
\newif\ifhavecolortbl
\IfStyFileExists{colortbl}  
  {\havecolortbltrue\RequirePackage{colortbl}}
  {}
%    \end{macrocode}
% 
% 
% \section{The threeparttable and threeparttablex packages}
% The package \pkgname{threeparttable} by Donald Arsenau facilitates tables with titles (captions) and notes. The
% package comes with a number of options |para|, |flushleft|, online and normal. We also load Lars Madsen's 
% \pkgname{threeparttablex} that extends the package to work with \pkgname{longtable}.
%
%   \label{threeparttable}
%    \begin{macrocode}
\RequirePackage{threeparttable}
\RequirePackage{threeparttablex}
%    \end{macrocode} 
% \section{arydshln}
%
%This package by \person{Hiroshi}{Nakashima}  gives \latex’s \pkg{array} and \pkg{tabular} environments the capability to draw horizontal/vertical dash-lines.
%
% I do not have a normal use for it, personally but I have included it here for correct ordering in case there is a need for it. According to the package documentation, it has to be loaded after \pkg{array}, \pkg{longtable}, \pkg{colortab}, \pkg{colortbl}. Also according to the hyperref documentation it has to be loaded after hyperref as well. 
%
%
%^^A \begin{center}
%^^A\begin{tabular}{|l::c:r|}\hline
%^^A A&B&C\\\hdashline
%^^A %AAA&BBB&CCC\\\cdashline{1-2}
%^^A %\multicolumn{2}{|l:}{AB}&C\\\hdashline\hdashline
%^^A %\end{tabular}
%^^A % \end{center}
%  
% \section{Managing Landscape Pages}
%
% A common request from authors is to rotate text, tables and or
% figures and to typeset the content using a landscape page.
%
% \section{pdflscape and lscape}
% 
% The package \pkgname{pdflscape} by Heiko Oberdiek  adds PDF support 
% to the environment |landscape| 
% of  package |lscape| by setting the PDF page attribute /Rotate. 
% It has to be loaded after \pkgname{lscape} so we let it load it itself.
%  
%    \begin{macrocode}

\IfStyFileExists {pdflscape}
  {\RequirePackage{pdflscape}}
  {}
%    \end{macrocode}
% 
% 
%  
% \chapter{Maths Packages and Commands}
%
% 	Although we cognizant that there are documents that do not use math
% 	and perhaps others that our selection of packages is inadequate, we
% 	offer a bundle of what we think will cover most of the cases. One
% 	issue with maths is that we are limited with TeX's built-in math
% 	alphabet limitations. We aim to satisfy the most common requirements.
% 
% \section{Math Alphabets hack}
%  We provide egreg's hack to extend the math alphabets for XeTeX
%  These hacks only work for XeTeX and LuaTeX. and fail for pdflatex.
%  Don't use pdflatex
%    \begin{macrocode}

\ifUNICODE
\else
\ifxetex
  \def\new@mathgroup{\alloc@8\mathgroup\mathchardef\@cclvi}
  \patchcmd{\document@select@group}{\sixt@@n}{\@cclvi}{}{}
  \patchcmd{\select@group}{\sixt@@n}{\@cclvi}{}{}
\fi
\ifluatex
  \def\new@mathgroup{\alloc@8\mathgroup\mathchardef\@cclvi}
  \patchcmd{\document@select@group}{\sixt@@n}{\@cclvi}{}{}
  \patchcmd{\select@group}{\sixt@@n}{\@cclvi}{}{}
\fi
\fi
%    \end{macrocode}
% 
% \section{mathtools} 
%	We start with \pkgname{mathtools}, as it loads the
% 	|amsmath| package and can also pass options to it. The package was developed 
% 	by Lars Madsen and is maintained by Will Robertson and Joseph Wright. It
% 	appears to be very popular with a lot of scholars in the sciences and
% 	mathematical fields and hence I decided to  include it here.\FIRE
% 

%
%
%    \begin{macrocode}
\newif\ifAMS
%\newcommand\AMS{\AmS\index{AMS=\AmS}}
\AMStrue
%    
%\IfStyFileExists{amssymb}
%  {\AMStrue
%   \save_symbol:{angle} \save_symbol:{rightleftharpoons}
%   \save_symbol:{leftharpoondown} \save_symbol:{rightharpoonup}
%   \save_symbol:{iint} \save_symbol:{iiint}
%   \save_symbol:{iiiint} \save_symbol:{idotsint}
%   \let\orig@ifstar=\@ifstar
%   \let\overleftrightarrow \undefined%CHECK
%   \let\underleftarrow\undefined
%    \let\underrightarrow\undefined 
%    \let\underleftrightarrow\undefined 
%   \RequirePackage{amsmath}
%   \RequirePackage{amssymb}
%   \let\@ifstar=\orig@ifstar
%   \restore_symbol:{AMS}{angle} \restore_symbol:{AMS}{rightleftharpoons}
%   \restore_symbol:{AMS}{lefthapoondown} \restore_symbol:{AMS}{rightharpoonup}
%   \restore_symbol:{AMS}{iint} \restore_symbol:{AMS}{iiint}
%   \restore_symbol:{AMS}{iiiint} \restore_symbol:{AMS}{idotsint}
%  }
%  {
%    % The following was modified from amsmath.sty.
%    \newcommand{\AmSfont}{%
%      \usefont{OMS}{cmsy}{m}{n}}
%    \providecommand{\AmS}{{\protect\AmSfont
%      A\kern-.1667em\lower.5ex\hbox{M}\kern-.125emS}}
%  }
%    
%
% This provides a useful way to hook into the package options
% using our setting interface.
%
%    \end{macrocode}
%    \begin{macrocode}
%
\ExplSyntaxOn
\newif\ifMTOOLS
\newcommand\MTOOLS{\pkgname{mathtools}}
 \RequirePackage{mathtools}
 \RequirePackage{suffix}
\IfStyFileExists{mathtools}
  {\MTOOLStrue
   \save_symbol:{xleftrightarrow} \save_symbol:{xLeftarrow}
   \save_symbol:{xRightarrow} \save_symbol:{xLeftrightarrow}
   \save_symbol:{xrightharpoondown} \save_symbol:{xrightharpoonup}
   \save_symbol:{xleftharpoondown} \save_symbol:{xleftharpoonup}
   \save_symbol:{xleftrightharpoons} \save_symbol:{xrightleftharpoons}
   \save_symbol:{xhookleftarrow} \save_symbol:{xhookrightarrow}
   \save_symbol:{xmapsto} \save_symbol:{underbracket}
   \save_symbol:{overbracket} \save_symbol:{lparen} \save_symbol:{rparen}
   \save_symbol:{dblcolon} \save_symbol:{coloneqq} \save_symbol:{Coloneqq}
   \save_symbol:{coloneq} \save_symbol:{Coloneq} \save_symbol:{eqqcolon}
   \save_symbol:{Eqqcolon} \save_symbol:{eqcolon} \save_symbol:{Eqcolon}
   \save_symbol:{colonapprox} \save_symbol:{Colonapprox}
   \save_symbol:{colonsim} \save_symbol:{Colonsim} \save_symbol:{overbrace}
   \save_symbol:{underbrace}%NEW
   \save_symbol:{underbrace}
   \save_symbol:{overleftrightarrow}%NEW
   \save_symbol:{mathscr}
   \save_symbol:{ulcorner}
   \save_symbol:{urcorner}
   \save_symbol:{llcorner}
   \save_symbol:{lrcorner}
   \save_symbol:{backepsilon}
   \save_symbol:{digamma}  
   \save_symbol:{underrightarrow}
   \save_symbol:{underleftarrow} 
   \save_symbol:{underleftrightarrow}
   \save_symbol:{eth}
   \save_symbol:{underbracket}
   % The mathtools package delays the definitions of some of its symbols
   % to the \begin{document}.  We redefine \AtBeginDocument to force
   % mathtools to define everything immediately.
   \let\origAtBeginDocument=\AtBeginDocument
   \def\AtBeginDocument##1{##1}
  % \let\RequirePackage\origRequirePackage
  \PassOptionsToPackage{donotfixmathbugs}{mathtools}
   \RequirePackage{mathtools}
   
   \let\AtBeginDocument=\origAtBeginDocument

   \restore_symbol:{MTOOLS}{xleftrightarrow}
   \restore_symbol:{MTOOLS}{xLeftarrow}
   \restore_symbol:{MTOOLS}{xRightarrow}
   \restore_symbol:{MTOOLS}{xLeftrightarrow}
   \restore_symbol:{MTOOLS}{xrightharpoondown}
   \restore_symbol:{MTOOLS}{xrightharpoonup}
   \restore_symbol:{MTOOLS}{xleftharpoondown}
   \restore_symbol:{MTOOLS}{xleftharpoonup}
   \restore_symbol:{MTOOLS}{xleftrightharpoons}
   \restore_symbol:{MTOOLS}{xrightleftharpoons}
   \restore_symbol:{MTOOLS}{xhookleftarrow}
   \restore_symbol:{MTOOLS}{xhookrightarrow}
   \restore_symbol:{MTOOLS}{xmapsto}
   \restore_symbol:{MTOOLS}{underbracket}
   \restore_symbol:{MTOOLS}{overbracket} \restore_symbol:{MTOOLS}{lparen}
   \restore_symbol:{MTOOLS}{rparen} \restore_symbol:{MTOOLS}{dblcolon}
   \restore_symbol:{MTOOLS}{coloneqq} \restore_symbol:{MTOOLS}{Coloneqq}
   \restore_symbol:{MTOOLS}{coloneq} \restore_symbol:{MTOOLS}{Coloneq}
   \restore_symbol:{MTOOLS}{eqqcolon} \restore_symbol:{MTOOLS}{Eqqcolon}
   \restore_symbol:{MTOOLS}{eqcolon} \restore_symbol:{MTOOLS}{Eqcolon}
   \restore_symbol:{MTOOLS}{colonapprox}
   \restore_symbol:{MTOOLS}{Colonapprox}
   \restore_symbol:{MTOOLS}{colonsim} \restore_symbol:{MTOOLS}{Colonsim}
   \restore_symbol:{MTOOLS}{overbrace} \restore_symbol:{MTOOLS}{underbrace}
   \restore_symbol:{MTOOLS}{underbracket}

   % Some of the above are defined in terms of \dblcolon.  At the time
   % of this writing it doesn't seem like any other package uses the
   % name \dblcolon so it should be safe to retain its mathtools
   % definition.
   \let\dblcolon=\MTOOLSdblcolon
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
%    \begin{macrocode}
%\cxset{tag left bracket/.store in = \leftbracket@cx,
%       tag right bracket/.store in = \rightbracket@cx,
%       tag font-weight/.store in = \tagfontweight@cx,
%       mathtool center colon/.store in=\centeredcolon@cx}
%%
%
%
%\newtagform{brackets}[\tagfontweight@cx]{\leftbracket@cx}%
%           {\rightbracket@cx}
%\mathtoolsset{centercolon=true,mathic}%italic correction in math
%\numberwithin{equation}{section}
%\cxset{tag left bracket =[,
%         tag right bracket =],
%         tag font-weight=\textbf,
%         mathtool center colon=false} 
%    \end{macrocode}
% 
% Macros to try and find available fonts for XeTeX sample docs. This is
% copied verbatim from XeTeX documentation bundle.
%
% Usage:
%
% |\testFontIsAvailable{font-name}|
%   sets |\ifFontIsAvailable| according to whether or not it could be found
%
% |\FindAnInstalledFont{font-name/alternative/another/yet-another}{\cs}|
%   searches for an available font from among the names given,
%   and |\def|'s the control sequence |\cs| to the first one found
%   or to <No suitable font found> if none (which will subsequently
%   cause an error when used in a |\font| command). A word of warning this
%   can cause the system to compile the document very slowly.
%
%    \begin{macrocode}
%
\newif\ifFontIsAvailable
\def\testFontAvailability#1{%
  \count255=\interactionmode
  \batchmode
  \let\preload=\nullfont
  \font\preload="#1" at 10pt
  \ifx\preload\nullfont \FontIsAvailablefalse
  \else \FontIsAvailabletrue \fi
  \interactionmode=\count255
}

\def\FindAnInstalledFont#1#2{
  \expandafter\getFirstFontName#1/\end
  \let\next\gobbleTwo
  \ifx\trialFontName\empty
    \def#2{<No suitable font found>}%
  \else
    \testFontAvailability{\trialFontName}
    \ifFontIsAvailable
      \edef#2{\trialFontName}%
    \else
      \let\next\FindAnInstalledFont
    \fi
  \fi
  \expandafter\next\expandafter{\remainingNames}{#2}
}
\def\getFirstFontName#1/#2\end{\def\trialFontName{#1}\def\remainingNames{#2}}
\def\gobbleTwo#1#2{}
%
%    \end{macrocode}
% {ligatures}
%    \begin{macrocode}
\newcommand\ligatures[2][Old Standard-Regular]{%
  \bgroup
  \fontspec[Ligatures = Common]{#1}%
  \textit{#2}%
  \egroup
}
\renewcommand\U[1]{{\texttt{U+#1}}(\char"#1)\xspace}
%    \end{macrocode}
% 

% 
%
%
% 
% \section{The ymath package}
%
% We load Yiannis Haralambous \pkgname{ymath}\ctan{ymath} package for its extensible wide accents. 
% not loaded? 
%    \begin{macrocode}
\newif\ifYH
\newcommand\YH{yhmaths}
\IfStyFileExists{yhmaths}
  {\YHtrue
   \let\origRequirePackage=\RequirePackage    % We don't want amsmath loaded.
   \def\RequirePackage##1{}
   \RequirePackage{yhmath}
   \let\RequirePackage=\origRequirePackage
  }
  { \RequirePackage{yhmath}}
%    \end{macrocode}

%    \begin{macrocode}
\RequirePackage{multienum}
%    \end{macrocode}
%
% \section{The accents package}
%
% If we have the \pkgname{accents}package \citep{accents}, use it (for an example in the section
% on constructing new symbols). Please do note that you need to use the
% right command name if we have restored it. Do note that the package redeclares
%\index{accents (package commands)>\ttfamily\string\underaccent}%
%\index{accents (package commands)>\ttfamily\string\ring}%
%\index{accents (package commands)>\ttfamily\string\undertilde}%
%\index{accents (package commands)>\ttfamily\string\dddot}%
%\index{accents (package commands)>\ttfamily\string\ddddot}%
% See commentary in \pkgname{stix} to see why we include it here.
%    \begin{macrocode}
\ExplSyntaxOn
\newif\ifACCENTS
\IfStyFileExists{accents}
  {\ACCENTStrue
   \save_symbol:{undertilde}
   \save_symbol:{dddot}
   \save_symbol:{ddddot}
   \RequirePackage{accents}
   \restore_symbol:{ACCENTS}{undertilde}
   \restore_symbol:{ACCENTS}{dddot}
   \restore_symbol:{ACCENTS}{ddddot}
  }
  {}   
\ExplSyntaxOff  
 %\RequirePackage {nath} DANGEROUS
%    \end{macrocode}
%
% \section{mathrsfs}
%
%  The package \pkgname{mathrsfs} provides calligraphic style fonts.
%  ^^A\mathscr{A B C D E F G} \FIRE to be overwriiten by unicode-math
%  options later. Need to study it.
% {mathscr}\FIRE needs fixing
%    \begin{macrocode}
%\else
\IfStyFileExists{mathrsfs}
  {\newcommand{\mathscr}[1]{\mbox{\usefont{U}{rsfs}{m}{n}##1}}}
  {}
%    \end{macrocode}
% 
%
% \section{txfonts}
% 
% pxfonts relies on txfonts (I think), so either package can be loaded.
% Note that txfonts/pxfonts redefine every LaTeX and AMS character,
% which is not what we want.  As a result, we have to rely on some
% serious trickery to prevent our old characters from getting redefined.
% If we are running with XeTeX this has to be before AMS and other packages
% and on top of fontspec. 
%    \begin{macrocode}
\def\TX{txfonts}
%    \end{macrocode}
% 
%
% \section{mathabx}
%
% Here's a real problem child: mathabx, which also redefines virtually
% every symbol provided by LaTeX2e and AMS.  We have to resort to our
% most devious trickery to get mathabx to load properly.
%
%    \begin{macrocode}
%
%
%\newif\ifABX
%\def\ABX{\pkgname{mathabx}}
%\let\origDeclareMathSymbol=\DeclareMathSymbol
%\let\origDeclareMathDelimiter=\DeclareMathDelimiter
%\let\origDeclareMathRadical=\DeclareMathRadical
%\let\origDeclareMathAccent=\DeclareMathAccent

  % Redefine \DeclareMathSymbol to stick "ABX" in front of each symbol name.
%  \renewcommand{\DeclareMathSymbol}[4]{%
%    \let\mathabx@undefine=\@gobble  % Undefining symbols causes all sorts of problems for us.
%    \edef\newname{\expandafter\@gobble\string#1}
%    \ifx\newname\@empty
%    \else
%      \edef\newname{ABX\newname}
%      \expandafter\origDeclareMathSymbol\expandafter{%
%        \csname\newname\endcsname}{#2}{#3}{#4}%
%    \fi
%  }
  % Do the same for \DeclareMathDelimiter.
%  \def\DeclareMathDelimiter#1{%
%    \edef\newname{\expandafter\@gobble\string#1}
%    \def\eatfour##1##2##3##4{}%
%    \def\eatfive##1##2##3##4##5{}%
%    \ifx\newname\@empty
%      \if\relax\noexpand#1%
%        \def\next{\eatfive}
%      \else
%        \def\next{\eatfour}
%      \fi
%    \else
%      \edef\newname{ABX\newname}
%      \def\next{%
%        \expandafter\origDeclareMathDelimiter\expandafter{%
%          \csname\newname\endcsname}}
%    \fi
%    \next
%  }
%  % Do the same for \DeclareMathAccent.
%  \renewcommand{\DeclareMathAccent}[4]{%
%    \edef\newname{\expandafter\@gobble\string#1}
%    \ifx\newname\@empty
%    \else
%      \edef\newname{ABX\newname}
%      \expandafter\origDeclareMathAccent\expandafter{%
%        \csname\newname\endcsname}{#2}{#3}{#4}%
%    \fi
%  }
%  % Redefine \DeclareMathRadical to do nothing.
% \renewcommand{\DeclareMathRadical}[5]{}
%
%\let\proofmode=1
%\RequirePackage{mathabx}
%\IfStyFileExists{mathabx}
%  {\ABXtrue
%   \save_symbol:{not} \save_symbol:{widering}\save_symbol:{Moon}
%   \save_symbol:{notowner} \save_symbol:{iint} \save_symbol:{iiint}
%   \save_symbol:{oint} \save_symbol:{oiint} \save_symbol:{bigboxperp}
%   \save_symbol:{bigoperp} \save_symbol:{boxedcirc} \save_symbol:{boxeddash}
%   \save_symbol:{boxeedast} \save_symbol:{boxperp} \save_symbol:{boy}
%   \save_symbol:{Cap} \save_symbol:{centerdot} \save_symbol:{circledast}
%   \save_symbol:{circledcirc} \save_symbol:{circleddash} \save_symbol:{Cup}
%   \save_symbol:{curvearrowtopleft} \save_symbol:{curvearrowtopleftright}
%   \save_symbol:{curvearrowtopright} \save_symbol:{doteqdot}
%   \save_symbol:{geqslant} \save_symbol:{gets} \save_symbol:{girl}
%   \save_symbol:{Join} \save_symbol:{land} \save_symbol:{leqslant}
%   \save_symbol:{looparrowupleft} \save_symbol:{looparrowupright}
%   \save_symbol:{lor} \save_symbol:{lsemantic}
%   \save_symbol:{mayaleftdelimiter} \save_symbol:{mayarightdelimiter}
%   \save_symbol:{ndivides} \save_symbol:{nequiv} \save_symbol:{ngeqslant}
%   \save_symbol:{ni} \save_symbol:{nleqslant} \save_symbol:{notni}
%   \save_symbol:{notowns} \save_symbol:{notsign} \save_symbol:{operp}
%   \save_symbol:{rsemantic} \save_symbol:{sqCap} \save_symbol:{sqCup}
%   \save_symbol:{to} \save_symbol:{ulsh} \save_symbol:{ursh}
%   \save_symbol:{overbrace} \save_symbol:{underbrace}
%   \save_symbol:{overgroup} \save_symbol:{undergroup}
%   \save_symbol:{dddot} \save_symbol:{ddddot}
%
%   \RequirePackage{mathabx}
%
%   \restore_symbol:{ABX}{not} \restore_symbol:{ABX}{widering}
%   \restore_symbol:{ABX}{Moon} \restore_symbol:{ABX}{notowner}
%   \restore_symbol:{ABX}{iint} \restore_symbol:{ABX}{iiint}
%   \restore_symbol:{ABX}{oint} \restore_symbol:{ABX}{oiint}
%   \restore_symbol:{ABX}{bigboxperp} \restore_symbol:{ABX}{bigoperp}
%   \restore_symbol:{ABX}{boxedcirc} \restore_symbol:{ABX}{boxeddash}
%   \restore_symbol:{ABX}{boxeedast} \restore_symbol:{ABX}{boxperp}
%   \restore_symbol:{ABX}{boy} \restore_symbol:{ABX}{Cap}
%   \restore_symbol:{ABX}{centerdot} \restore_symbol:{ABX}{circledast}
%   \restore_symbol:{ABX}{circledcirc} \restore_symbol:{ABX}{circleddash}
%   \restore_symbol:{ABX}{Cup} \restore_symbol:{ABX}{curvearrowtopleft}
%   \restore_symbol:{ABX}{curvearrowtopleftright}
%   \restore_symbol:{ABX}{curvearrowtopright}
%   \restore_symbol:{ABX}{doteqdot} \restore_symbol:{ABX}{geqslant}
%   \restore_symbol:{ABX}{gets} \restore_symbol:{ABX}{girl}
%   \restore_symbol:{ABX}{Join} \restore_symbol:{ABX}{land}
%   \restore_symbol:{ABX}{leqslant} \restore_symbol:{ABX}{looparrowupleft}
%   \restore_symbol:{ABX}{looparrowupright} \restore_symbol:{ABX}{lor}
%   \restore_symbol:{ABX}{lsemantic}
%   \restore_symbol:{ABX}{mayaleftdelimiter}
%   \restore_symbol:{ABX}{mayarightdelimiter}
%   \restore_symbol:{ABX}{ndivides} \restore_symbol:{ABX}{nequiv}
%   \restore_symbol:{ABX}{ngeqslant} \restore_symbol:{ABX}{ni}
%   \restore_symbol:{ABX}{nleqslant} \restore_symbol:{ABX}{notni}
%   \restore_symbol:{ABX}{notowns} \restore_symbol:{ABX}{notsign}
%   \restore_symbol:{ABX}{operp} \restore_symbol:{ABX}{rsemantic}
%   \restore_symbol:{ABX}{sqCap} \restore_symbol:{ABX}{sqCup}
%   \restore_symbol:{ABX}{to} \restore_symbol:{ABX}{ulsh}
%   \restore_symbol:{ABX}{ursh} \restore_symbol:{ABX}{overbrace}
%   \restore_symbol:{ABX}{underbrace} \restore_symbol:{ABX}{overgroup}
%   \restore_symbol:{ABX}{undergroup}
%   \restore_symbol:{ABX}{dddot} \restore_symbol:{ABX}{ddddot}
%  }
%  {}
%\let\DeclareMathAccent=\origDeclareMathAccent
%\let\DeclareMathRadical=\origDeclareMathRadical
%\let\DeclareMathDelimiter=\origDeclareMathDelimiter
%\let\DeclareMathSymbol=\origDeclareMathSymbol
%\ifABX
  % Define only those accents that are not defined elsewhere.
%  \DeclareMathAccent{\widecheck}     {0}{mathx}{"71}
%  \DeclareMathAccent{\widebar}       {0}{mathx}{"73}
%  \DeclareMathAccent{\widearrow}     {0}{mathx}{"74}
%  % Redefine all let-bound symbols.
%  \let\ABXcenterdot=\ABXsqbullet
%  \let\ABXcircledast=\ABXoasterisk
%  \let\ABXcircledcirc=\ABXocirc
%  % Ensure that \ABXwidering invokes \ABXwideparen, not \wideparen.
%  \def\ABXwidering#1{\ring{\ABXwideparen{#1}}}
%  % Redefine commands that are used by other commands.
%  \DeclareMathSymbol{\ABXnotsign}    {3}{matha}{"7F}
%  \DeclareMathSymbol{\ABXvarnotsign} {3}{mathb}{"7F}
%  \DeclareMathSymbol{\ABXnotowner}   {3}{matha}{"53}
%  
%  \def\ABXoverbrace{\overbrace@{\bracefill\ABXbraceld\ABXbracemd\ABXbracerd\ABXbracexd}}
%    \def\ABXunderbrace{\underbrace@{\bracefill\ABXbracelu\ABXbracemu\ABXbraceru\ABXbracexu}}
%    \def\ABXovergroup{\overbrace@{\bracefill\ABXbraceld{}\ABXbracerd\ABXbracexd}}
%    \def\ABXundergroup{\underbrace@{\bracefill\ABXbracelu{}\ABXbraceru\ABXbracexu}} 
%
%  
%  % Define a command to select the mathb font.
%  \newcommand{\mathbfont}{\usefont{U}{mathb}{m}{n}}
%\fi    % ABX test
%%
%
%    \end{macrocode}
%
% 
% \section{empheq}
%
%  This is not on ctan and I removed it
%    \begin{macrocode}
%^^A\RequirePackage[allowspaces]{empheq} %defines harpoon macros
%    \end{macrocode}
%
% \section{Fractions}
% We load two packages for fractions, but our preference is to use the
% \pkgname{xfrac}. We load \pkgname{nicefrac} in case anyone disagrees.
% 
% \subsection{The nicefrac and xfrac package}
% The package \pkgname{xfrac} produces better fractions. 
% The \pkgname{nicefrac} is an older package. I am told some people still use it.
%    \begin{macrocode}
\RequirePackage{nicefrac}
\RequirePackage{xfrac}
%    \end{macrocode}
% 
% 
% \section{AMS Packages}
% 
% We load \pkgname{amssymb},
% \pkgname{amsthm}, \pkgname{amsopn} and \pkgname{amscd} to complete the \AmS\ suite.
%    \begin{macrocode}
\RequirePackage{amssymb}[2002/01/22]
\RequirePackage{amsthm}[2002/01/22]
\RequirePackage{amsopn}
\RequirePackage{amscd}
%    \end{macrocode}
%
% \subsection{bmatrix columns}
% We increase the number of bmatrix columns, as this is a common requirement.
%    \begin{macrocode}
\setcounter{MaxMatrixCols}{20}
%    \end{macrocode}
%
% \section{dsfont}
%
% The \pkgname{dsfont} which is available in MikTeX as \pkgname{dstroke} can be useful
% for typesetting the mathematical symbols for the natural numbers
% \person{Olaf}{Kummer} \citep{dsfont}. 
% It breaks XeTeX and LuaTeX so we only load it for
% LaTeX.
% 
%    \begin{macrocode} 
\ifengine{}{}{% 
  \IfStyFileExists{dsfont}%
    { \newcommand{\mathds}[1]{\mbox{\usefont{U}{dsrom}{m}{n}##1}}
      \newcommand{\mathdsss}[1]{\mbox{\usefont{U}{dsss}{m}{n}##1}}}
    {}
}
%    \end{macrocode}
%
% The package |stmaryrd| can be used for additional symbols. 
% 
% The \pkgname{amscd} is probably not useful at all as people are
% moving to graphical programs such as TikZ for their commutative
% diagrams.
%  
%
%This package\footnote{The package is part of the \texttt{mh}-bundle 
%of Morten H\o gholm (\href{http://www.ctan.org/tex-archive/macros/latex/contrib/mh/}{CTAN://macros/latex/contrib/mh/}).} 
%supports different frames for math environments of the 
% AmSmath
%package. It doesn't support  all the environments from %standard \LaTeX{} which 
% are not modified by \AmS{}math.
%
%With the optional argument of the empheq
%the preferred box type
%can be specified. A simple one is |fbox|.
%
%  ^^A\begin{empheq}[box=\fbox]{align}
%	^^Af(x)=\int_1^{\infty}\frac{1}{x^2}\,\mathrm{d}x=1
%  ^^A\end{empheq}

% \subsection{xpfeil}
%
%  The package \pkgname{extpfeil} loads \pkgname{stmaryd} with limited options
%  we temporarily make |\RequirePckage| a no-op to prevent
%   LaTeX from complaining.
% 
% Manually define every symbol in \pkgname{cmll} so we don't have to use any more
% math alphabets.
% 
% \section{Feynman diagrams}
% The package feyn provides yet another math font for which we have no room.
% Fortunately, it's relatively easy to define all of its symbols in
% terms of a text font.
% 
%
%    \begin{macrocode} 
\ExplSyntaxOn 
\newif\ifFEYN
\newcommand\FEYN{\pkgname{feyn}}
\IfStyFileExists{feyn}
  {\FEYNtrue
   \let\origProvidesPackage=\ProvidesPackage
   \def\ProvidesPackage##1[##2]{\origProvidesPackage{##1}[##2]\endinput}
   \save_symbol:{filename}
   \usepackage{feyn}
   \restore_symbol:{FEYN}{filename}
   \let\ProvidesPackage=\origProvidesPackage
   \DeclareFontFamily{OMS}{textfeyn}{\skewchar\font'000}
   \DeclareFontShape{OMS}{textfeyn}{m}{n}{%
     <-10.5>feyntext10%
     <10.5-11.5>feyntext11%
     <11.5->feyntext12%
   }{}
   \DeclareRobustCommand{\feyn}[1]{{\usefont{OMS}{textfeyn}{m}{n}##1}}
   \DeclareRobustCommand{\wfermion}{\feyn{\char"64}}
   \DeclareRobustCommand{\hfermion}{\feyn{\char"6B}}
   \DeclareRobustCommand{\shfermion}{\feyn{\char"6C}}
   \DeclareRobustCommand{\whfermion}{\feyn{\char"6D}}
   \DeclareRobustCommand{\gvcropped}{\feyn{\char"07}}
   \DeclareRobustCommand{\bigbosonloop}{\feyn{\char"7B}}
   \DeclareRobustCommand{\smallbosonloop}{\feyn{\char"7C}}
   \DeclareRobustCommand{\bigbosonloopA}{\feyn{\char"5B}}
   \DeclareRobustCommand{\smallbosonloopA}{\feyn{\char"5C}}
   \DeclareRobustCommand{\bigbosonloopV}{\feyn{\char"1B}}
   \DeclareRobustCommand{\smallbosonloopV}{\feyn{\char"1C}}
  }
  {}
 \DeclareRobustCommand\FIRE{{\large\color{red}\Fire}}
\ExplSyntaxOff 
%    \end{macrocode} 
% \begin{macrocode} 
% \section {A Go game package}
% This is such a good go game package. Unfortunately the looping 
% is done through an old package saved as repeat.tex, which is
% problematic. Also LuaTeX might have a problem with some of
% the metric files and I have still to find out where |\white|
% and |\black| are defined. This is
% for another day?
% {\FIRE }
% \medskip
% \bgroup
%
% \centering
%  \smallgoban
%  \cleargoban
%  \white[1]{c16,e16,e17,f17,d17,f16}
%  \copytogoban{2}
%  \white[7]{c14,k17}
%  \showgoban
%  \par
% 
% \egroup
% \medskip
%
% This package demonstrates the hazards of redefining common commands. It redefined
% all the sizing commands, as well as normalsize. The looping constructs also
% were conflicting with other packages. So I saved it and added some prefixes to
% patch it so it can be include here. This cries for a full re-write and
% to use \tikzname for the board.
%
%    
%%
%\ExplSyntaxOn
%\newif\ifIGO
%\newcommand\IGO{\pkgname{igo}}
%
%\IfStyFileExists{xigo}
%  {
%  \save_symbol:{black}
%%   \save_symbol:{white}
%%   \save_symbol:{repeat}
%%   % Don't let igo redefine all of the font-size commands.
%%   \save_symbol:{scriptsize}\newcommand{\scriptsize}{}
%%   \save_symbol:{tiny}\newcommand{\tiny}{}
%%   \save_symbol:{large}\newcommand{\large}{}
%%   \save_symbol:{Large}\newcommand{\Large}{}
%%   \save_symbol:{LARGE}\newcommand{\LARGE}{}
%%   \save_symbol:{huge}\newcommand{\huge}{}
%%   \save_symbol:{Huge}\newcommand{\Huge}{}
%  
%   \IGOtrue
%   \RequirePackage{xigo}
%%   \restore_symbol:{IGO}{black}
%%   \restore_symbol:{IGO}{white}
%%   %\restore_symbol:{IGO}{repeat}
%%   \restore_symbol:{IGO}{tiny}
%%   \restore_symbol:{IGO}{large}
%%   \restore_symbol:{IGO}{Large}
%%   \restore_symbol:{IGO}{LARGE}
%%   \restore_symbol:{IGO}{huge}
%%   \restore_symbol:{IGO}{Huge}
%   
%   % Define a version of \whitestone and \blackstone that avoid
%   % bracketed arguments.
%   \DeclareRobustCommand{\igowhitestone}[1]{\whitestone[##1]}
%   \DeclareRobustCommand{\igoblackstone}[1]{\blackstone[##1]}
%  }
%  {}
%\ExplSyntaxOff
%  
%    \end{macrocode}
%
% \section{The package ulsy}
% The \pkgname{ulsy} developed by Ulrich Goldschmitt provides two symbols
% one for the odplus and a second for contradiction. The latter comes in five sizes.
%  \odplus \blitza \blitzb \blitzc \blitzd \blitze. I am not too sure if anyone has a use
% for it. They are defined with |newcomand| so they do not conflict with anything.
%    \begin{macrocode}
\newif\ifULSY
\newcommand\ULSY{\pkgname{ulsy}}
\IfStyFileExists{ulsy}
  {\ULSYtrue\usepackage{ulsy}}
  {}
%    \end{macrocode}  
% \section{The package colonequals}  
%    \begin{macrocode}
\ExplSyntaxOn
\newif\ifCEQ
\newcommand\CEQ{\pkgname{colonequals}}
\IfStyFileExists{colonequals}
  {\save_symbol:{colonapprox}
   \save_symbol:{colonsim}
   \CEQtrue
   \usepackage{colonequals}
   \restore_symbol:{CEQ}{colonapprox}
   \restore_symbol:{CEQ}{colonsim}
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
%
% \section{Linear Logic Symbols cmll}
% 
% The \pkgname{cmll} font defines a handful of symbols useful in linear logic that were not defined in other fonts and packages. The package needs to be loaded
% after txtfonts. We rename some of 
%
%   \CMLLbigparr 
%   \CMLLbigwith
%
%    \begin{macrocode}
\newif\ifCMLL
\newcommand\CMLL{\pkgname{cmll}}
\IfStyFileExists{cmll}
  {\CMLLtrue
   \newcommand*{\textCMLL}[1]{{\usefont{U}{cmllr}{m}{n}##1}}
   \DeclareRobustCommand{\CMLLparr}{\textCMLL{\char0}}
   \DeclareRobustCommand{\CMLLshpos}{\textCMLL{\char1}}
   \DeclareRobustCommand{\CMLLshneg}{\textCMLL{\char2}}
   \DeclareRobustCommand{\CMLLshift}{\textCMLL{\char3}}
   \DeclareRobustCommand{\CMLLcoh}{\textCMLL{\char4}}
   \DeclareRobustCommand{\CMLLscoh}{\textCMLL{\char5}}
   \DeclareRobustCommand{\CMLLincoh}{\textCMLL{\char6}}
   \DeclareRobustCommand{\CMLLsincoh}{\textCMLL{\char7}}
   \DeclareRobustCommand{\CMLLbigwith}{\raisebox{2ex}{\textCMLL{\char8}}}
   \DeclareRobustCommand{\CMLLbigparr}{\raisebox{2ex}{\textCMLL{\char10}}}
  }
  {}
%    \end{macrocode}
%
% \section{stmaryd}
% The \pkgname{stmaryd} is a symbol font who according to the developer
% \citep{stmaryrd} designed to live with the American Mathematical Society’s fonts, contained in amssymb.sty \FIRE
%    \begin{macrocode}
\ExplSyntaxOn
 \newif\ifST
 \newcommand\ST{\pkgname{stmaryrd}}
 \IfStyFileExists{stmaryrd}
  {\STtrue
   \save_symbol:{lightning}
   \save_symbol:{bigtriangleup} \save_symbol:{bigtriangledown}
   \RequirePackage{stmaryrd}
   \restore_symbol:{ST}{lightning}
   \restore_symbol:{ST}{bigtriangleup} \restore_symbol:{ST}{bigtriangledown}
  }
  {} 
\ExplSyntaxOff  
%    \end{macrocode}
% The package has a lot of options. 
% $\merge$. I need to think more as to how to handle it.
% 
% \section{extpfeil}
%    \begin{macrocode} 
\ExplSyntaxOn 
\newif\ifXPFEIL
\newcommand\XPFEIL{\pkgname{extpfeil}}
\IfStyFileExists{extpfeils}
  {\XPFEILtrue
   % extpfeil tries to do a \RequirePackage of stmaryrd with
   % conflicting options from what we used to load stmaryd.  We
   % therefore temporarily make \RequirePackage a no-op to prevent LaTeX
   % from complaining.
   \let\origRequirePackage=\RequirePackage
   \renewcommand*{\RequirePackage}[2][]{}
   \save_symbol:{xlongequal}
   \save_symbol:{xmapsto}
   \RequirePackage{extpfeil}
   \restore_symbol:{XPFEIL}{xlongequal}
   \restore_symbol:{XPFEIL}{xmapsto}
   \let\RequirePackage=\origRequirePackage
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
%   
% \section{euscript} 
%  
%  For calligraphic math fonts we load the package \pkgname{euscript}. 
%
%  The expected normal use of the Euler Script alphabet is as a substitute
%  for the Computer Modern calligraphic alphabet found in |cmsy|. Therefore we
%  change the meaning of \cmd{\mathcal}. The package uses the Euler script alphabet found in |cmy|
%  and changes the meaning of \cmd{\mathcal} \seedocs{euscript}
%
% |\[ \mathcal{A} = \EuScript{A} \neq \CMcal{A} \] |
% 
%    \begin{macrocode}
\iffalse
\newif\ifEU
\IfStyFileExists{euscript}
  {\EUtrue\RequirePackage[mathcal]{euscript}
   \renewcommand{\mathcal}[1]{\mbox{\usefont{U}{eus}{m}{n}##1}}
  }
  {\let\CMcal\mathcal}
\fi
%    \end{macrocode}
%
% \section{Blackboard fonts}
% \subsection{The bm and bbm fonts}
% 
% These two packages provide bold math fonts. If we have the bm package, use it (to show how to typeset bold math).
% ^^A\mathbbmtt{\ALPHABET} 
% ^^AThe characters can be also be used for subscripts and superscripts.
% ^^A$M_{\mathbbm{i}}$. The package is the work of \person{Torsten}{Hilbrich}
%
%    \begin{macrocode}
%\ifUNICODE
%\else
  \newif\ifBM
  \IfStyFileExists{bm}
    {\BMtrue
      \RequirePackage{bm}
    }
   {}  
%\fi   
%    \end{macrocode}
%
% \section{bbm}
%
%    \begin{macrocode}  
\ifUNICODE
 \else
\IfStyFileExists{bbm}
  {\newcommand{\mathbbm}[1]{\mbox{\usefont{U}{bbm}{m}{n}##1}}
   \newcommand{\mathbbmss}[1]{\mbox{\usefont{U}{bbmss}{m}{n}##1}}
   \newcommand{\mathbbmtt}[1]{\mbox{\usefont{U}{bbmtt}{m}{n}##1}}}
  {}
\fi  
%    \end{macrocode}
%
% \section{bbold}
% The package \pkgname{bbold} developed by Alan Jeffrey provides an
% open or `blackboard bold' geometric sans serif. The package bbold-type1,
% offers type-1 fonts for the same. We use the latter, but conflicts with
% the staves?? \FIRE font or metric data bad.
%    \begin{macrocode}
\ifUNICODE
\else
\IfStyFileExists{bbold}
  {
  %</fontdef
  \newcommand{\BBmathbb}[1]{\mbox{\usefont{U}{bbold}{m}{n}##1}}
   % We have to manually define all of the symbols we care about.
   \newcommand{\BBsym}[1]{\ensuremath{\BBmathbb{\char##1}}}
   \newcommand{\Langle}{\BBsym{`<}}
   \newcommand{\Lbrack}{\BBsym{`[}}
   \newcommand{\Lparen}{\BBsym{`(}}
   \newcommand{\bbalpha}{\BBsym{"0B}}
   \newcommand{\bbbeta}{\BBsym{"0C}}
   \newcommand{\bbgamma}{\BBsym{"0D}}
   \newcommand{\Rparen}{\BBsym{`)}}
   \newcommand{\Rbrack}{\BBsym{`]}}
   \newcommand{\Rangle}{\BBsym{"3E}}
  }
  {}
\fi  
%    \end{macrocode}  
%  
%  |$\scriptsize\bbalpha \bbbeta \bbgamma $| Fails
%
% 
%
% \section{mbboard}
%
%  
%    \begin{macrocode}
\IfStyFileExists{mbboard}
  {\newcommand{\MBBmathbb}[1]{\mbox{\usefont{OT1}{mbb}{m}{n}##1}}}
  {}
\ifx\MBBmathbb\undefined
\else
  % Define only the symbols we actually use.
  \newcommand{\bbnabla}{\MBBmathbb{\char"9A}}
  \newcommand{\bbdollar}{\MBBmathbb{\char"24}}
  \newcommand{\bbeuro}{\MBBmathbb{\char"FB}}
  \newcommand{\bbpe}{\MBBmathbb{\char"D4}}
  \newcommand{\bbqof}{\MBBmathbb{\char"D7}}
  \newcommand{\bbyod}{\MBBmathbb{\char"C9}}
  \newcommand{\bbfinalnun}{\MBBmathbb{\char"CF}}

  % The following was copied from mbboard.sty.
  \DeclareFontFamily{OT1}{mbb}{\hyphenchar\font45}
  \DeclareFontShape{OT1}{mbb}{m}{n}{
        <5> <6> <7> <8> <9> <10> gen * mbb
        <10.95> mbb10 <12> <14.4> mbb12 <17.28> <20.74> <24.88> mbb17
        }{}
\fi

% \mathfrak is defined by a number of packages, to check for it by name.
\ifx\mathfrak\undefined
\else
  \renewcommand{\mathfrak}[1]{\mbox{\fontencoding{U}\fontfamily{euf}\selectfont#1}}
\fi
%    \end{macrocode}
%
%
% \section{The upgreek package} 
%
% The package \pkgname{upgreek} by Walter Schmidt provides fonts
% and commands for an upright Greek alphabet. It makes the upright
% Greek characters from the `Euler'  or `Adobe Symbol' typefaces available as 
% math symbols. It defaults to the Euler option. The package offers three
% options |Euler|, |Symbol| and |Symbolsmallscale|. This is in a bundle
% called |was|, so there are problems downloading it automatically via MikTeX.
% CHECK
% 
%    \begin{macrocode}
\newif\ifUPGR
    \RequirePackage[Symbol]{upgreek}
%    \end{macrocode}
% 
%
% \[
%  \begin{array}{lll}
%   \upalpha  &\upbeta    &\upgamma\\ 
%   \updelta  &\upepsilon &\upzeta\\
%   \upeta    &\uptheta   &\upiota \\
%   \upkappa  &\uplambda   &\upmu\\
%   \upnu     &\upxi      &\uppi\\
%   \uprho    &\upsigma  &\uptau\\
%   \upupsilon &\upphi   &\upchi\\
%   \uppsi     &\upomega  &\upvarepsilon\\
%   \upvartheta &\upvarpi  &\\
%  \end{array}
% \]
%
% 
% \section{mathdots}
% The \pkgname{mathdots} by Dan Luecking. 
%    \begin{macrocode}
\ExplSyntaxOn
\newif\ifMDOTS
\newcommand\MDOTS{\pkgname{mathdots}}
\ifUNICODE
\else
\IfStyFileExists{mathdots}
  {\MDOTStrue
   \save_symbol:{ddots}
   \save_symbol:{vdots}
   \save_symbol:{iddots}
   \save_symbol:{dddot}
   \save_symbol:{ddddot}
   \RequirePackage{mathdots}
   \restore_symbol:{MDOTS}{ddots}
   \restore_symbol:{MDOTS}{vdots}
   \restore_symbol:{MDOTS}{iddots}
   \restore_symbol:{MDOTS}{dddot}
   \restore_symbol:{MDOTS}{ddddot}
  }
  {}
\fi  
\ExplSyntaxOff  
%    \end{macrocode}  
% 
%  \chapter{Symbols}
%
%  The next section of the package, deals exclusively for packages that
%  handle symbols. The best guide to such symbols is 
%  \textit{The Comprehensive LaTeX Symbols Guide}. One needs to distinguish
%  a number of different types of symbols required for a manual and it is
%  a difficult exercise to make a selection. Another issue with symbols
%  is that there is a bit of overlap between the various fonts and commands
%  as to be expected.
%
%  \section{ASCII}
%
%  The \pkgname{ascii} will typeset a document in typewriter
%  font. We only need some of its commands to print
%  the ASCI table from 1-32. Can you imagine conflicting with 
%  siunix!!!
%    \begin{macrocode}
\ExplSyntaxOn
\let\oldSI\SI
\let\SI\undefined
\newif\ifASCII
\newcommand\ASCII{\pkgname{ascii}}
\IfStyFileExists{ascii}
	  {\ASCIItrue
	   \save_symbol:{HT}
	   \RequirePackage{ascii}
	   \restore_symbol:{ascii}{HT}
	   \let\SI\undefined
	  }
	  {}
\let\SI\oldSI
\ExplSyntaxOff	  
%    \end{macrocode}
%
%  \section{The china2e package}
%
%  The \pkgname{china2e} is a fairly old package, but can provide some
%  useful commands. It also provides helpful Chinese lunar symbols, although
%  now with specialized Chinese packages, these is fairly redundant for any
%  major use.
%
%  Of interest is some useful maths commands. \cmd{\Natural} \cmd{\NATURAL}
%  {\huge\color{thered}\Fire} \seedocs{china}.
% 
%    \begin{macrocode}
\ExplSyntaxOn
\newif\ifCHINA
\newcommand\CHINA{%
  \Chinasym
  \index{china2e=\textsf{china2e} (package)}%
  \index{packages>china2e=\textsf{china2e}}}
%  
\IfStyFileExists{china2e}
  {\CHINAtrue
   \save_symbol:{Info}
   \save_symbol:{Earth}
   \save_symbol:{Telephone}
   \save_symbol:{Fire}
   \save_symbol:{vdots}
   \let\origDeclareSymbolFont=\DeclareSymbolFont
   \let\origDeclareMathSymbol=\DeclareMathSymbol
   \renewcommand{\DeclareSymbolFont}[5]{}
   \renewcommand{\DeclareMathSymbol}[4]{%
     \DeclareRobustCommand{##1}{{\uchr##4}}}
   \usepackage{china2e}
   \let\DeclareSymbolFont=\origDeclareSymbolFont
   \let\DeclareMathSymbol=\origDeclareMathSymbol
   \restore_symbol:{china}{Info}
   \restore_symbol:{china}{Earth}
   \restore_symbol:{china}{Telephone}
   \restore_symbol:{china}{Fire}
   \restore_symbol:{CHINA}{vdots}
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
%
%  \section{The harpoon package}
%  This package is quite old developed in 1994 by Tobias Kuipers.
%  \overleftharp{This is some text}, 
%  \overrightharp {Other text}. I do not know if any ever uses it, but is lightweight,
%  so I included it here.
%
%    \begin{macrocode}
\newif\ifHARP
\newcommand\HARP{\pkgname{harpoon}}
\IfStyFileExists{harpoon}
  {\HARPtrue\usepackage{harpoon}}
  {}

%    \end{macrocode}
%
% \section{texcomp and mathcomp}
%
% We use the \pkg{texcomp} package for special symbols, such as |\checkmark|
%  \( \mho \Diamond \leadsto \rhd \diamond \Diamond \). The sort of the standard package
% latexsym is not loaded as it duplicates functionality of the if one makes use of the packages |amsfonts| or |amssymb|.
%
% {textcomp} 
% {mathcomp} The package |textcomp| is part of the \LaTeXe
% distribution. The description of the package
% on ctan can give the erroneous idea that it is obsolete; on the contrary 
% is part of the original distribution.textcomp is not obsolete, it's just not distributed as extra package any more since it's distributed with the basic LaTeX distribution. The \pkg{mathcomp} package defines macros for using some of these text... symbols with math and the abbreviation tc...
%
%  The symbols are used by calling them by their name. E.g. \ifxetex\else\textleaf\fi:
%  \verb|\textleaf|.
%  
%  In mathematics the package \verb|mathcomp| works. Then the prefix
%  \verb|text| is replaced by \verb|tc|, for \emph{t}ext\emph{c}omp:
%  |tcohm|  
% 
% The |mathcomp| package takes one option to describe the
% font to be used. We use |rmdfault| as the option to default to
% the \cs{rmdefault} font.
% 
%    \begin{macrocode}
%  Redefine the LaTeX commands that are replaced by textcomp.
%  This was swiped right out of ltoutenc.dtx, but with "\text..."
%  changed to "\ltext...". This also conflicts with fontspec
%  better to handle the errors 
\DeclareTextCommandDefault{\ltextcopyright}{\textcircled{c}}
\DeclareTextCommandDefault{\ltextregistered}{\textcircled{\scshape r}}
\DeclareTextCommandDefault{\ltexttrademark}{\textsuperscript{TM}}
\DeclareTextCommandDefault{\ltextordfeminine}{\textsuperscript{a}}
\DeclareTextCommandDefault{\ltextordmasculine}{\textsuperscript{o}}
%
\DeclareTextSymbol{\textcentoldstyle}{TS1}{'213}
\DeclareTextSymbolDefault{\textcentoldstyle}{TS1}
\DeclareTextSymbol{\textdollaroldstyle}{TS1}{'212}
\DeclareTextSymbolDefault{\textdollaroldstyle}{TS1}
\DeclareTextSymbol{\textguarani}{TS1}{'220}
\DeclareTextSymbolDefault{\textguarani}{TS1}
% Not many fonts support these code-points yet.
% So leave these undefined at present.  from fontspec

\def\UTFDeclarations{%
  \DeclareUTFcharacter[\UTFencname]{x3008}{\textlangle}
  \DeclareUTFcharacter[\UTFencname]{x3009}{\textrangle}
  \DeclareUTFcharacter[\UTFencname]{x301A}{\textlbrackdbl}
  \DeclareUTFcharacter[\UTFencname]{x301B}{\textrbrackdbl}

% old-style numbers

  \DeclareUTFcharacter[\UTFencname]{xFF10}{\textzerooldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF11}{\textoneoldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF12}{\texttwooldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF13}{\textthreeoldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF14}{\textfouroldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF15}{\textfiveoldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF16}{\textsixoldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF17}{\textsevenoldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF18}{\texteightoldstyle}
  \DeclareUTFcharacter[\UTFencname]{xFF19}{\textnineoldstyle}

% For circled letters and small numbers
%

  \DeclareEncodedCompositeCharacter{\UTFencname}{\textcircled}{20DD}{25EF}
  \DeclareUTFcomposite[\UTFencname]{x2460}{\textcircled}{1}
  \DeclareUTFcomposite[\UTFencname]{x2461}{\textcircled}{2}
  \DeclareUTFcomposite[\UTFencname]{x2462}{\textcircled}{3}
  \DeclareUTFcomposite[\UTFencname]{x2463}{\textcircled}{4}
  \DeclareUTFcomposite[\UTFencname]{x2464}{\textcircled}{5}
  \DeclareUTFcomposite[\UTFencname]{x2465}{\textcircled}{6}
  \DeclareUTFcomposite[\UTFencname]{x2466}{\textcircled}{7}
  \DeclareUTFcomposite[\UTFencname]{x2467}{\textcircled}{8}
  \DeclareUTFcomposite[\UTFencname]{x2468}{\textcircled}{9}
  \DeclareUTFcomposite[\UTFencname]{x2469}{\textcircled}{10}
  \DeclareUTFcomposite[\UTFencname]{x246A}{\textcircled}{11}
  \DeclareUTFcomposite[\UTFencname]{x246B}{\textcircled}{12}
  \DeclareUTFcomposite[\UTFencname]{x246C}{\textcircled}{13}
  \DeclareUTFcomposite[\UTFencname]{x246D}{\textcircled}{14}
  \DeclareUTFcomposite[\UTFencname]{x246E}{\textcircled}{15}
  \DeclareUTFcomposite[\UTFencname]{x246F}{\textcircled}{16}
  \DeclareUTFcomposite[\UTFencname]{x2470}{\textcircled}{17}
  \DeclareUTFcomposite[\UTFencname]{x2471}{\textcircled}{18}
  \DeclareUTFcomposite[\UTFencname]{x2472}{\textcircled}{19}
  \DeclareUTFcomposite[\UTFencname]{x2473}{\textcircled}{20}
  \DeclareUTFcomposite[\UTFencname]{x24B6}{\textcircled}{A}
  \DeclareUTFcomposite[\UTFencname]{x24B7}{\textcircled}{B}
  \DeclareUTFcomposite[\UTFencname]{x24B8}{\textcircled}{C}
  \DeclareUTFcomposite[\UTFencname]{x24B9}{\textcircled}{D}
  \DeclareUTFcomposite[\UTFencname]{x24BA}{\textcircled}{E}
  \DeclareUTFcomposite[\UTFencname]{x24BB}{\textcircled}{F}
  \DeclareUTFcomposite[\UTFencname]{x24BC}{\textcircled}{G}
  \DeclareUTFcomposite[\UTFencname]{x24BD}{\textcircled}{H}
  \DeclareUTFcomposite[\UTFencname]{x24BE}{\textcircled}{I}
  \DeclareUTFcomposite[\UTFencname]{x24BF}{\textcircled}{J}
  \DeclareUTFcomposite[\UTFencname]{x24C0}{\textcircled}{K}
  \DeclareUTFcomposite[\UTFencname]{x24C1}{\textcircled}{L}
  \DeclareUTFcomposite[\UTFencname]{x24C2}{\textcircled}{M}
  \DeclareUTFcomposite[\UTFencname]{x24C3}{\textcircled}{N}
  \DeclareUTFcomposite[\UTFencname]{x24C4}{\textcircled}{O}
  \DeclareUTFcomposite[\UTFencname]{x24C5}{\textcircled}{P}
  \DeclareUTFcomposite[\UTFencname]{x24C6}{\textcircled}{Q}
  \DeclareUTFcomposite[\UTFencname]{x24C7}{\textcircled}{R}
  \DeclareUTFcomposite[\UTFencname]{x24C8}{\textcircled}{S}
  \DeclareUTFcomposite[\UTFencname]{x24C9}{\textcircled}{T}
  \DeclareUTFcomposite[\UTFencname]{x24CA}{\textcircled}{U}
  \DeclareUTFcomposite[\UTFencname]{x24CB}{\textcircled}{V}
  \DeclareUTFcomposite[\UTFencname]{x24CC}{\textcircled}{W}
  \DeclareUTFcomposite[\UTFencname]{x24CD}{\textcircled}{X}
  \DeclareUTFcomposite[\UTFencname]{x24CE}{\textcircled}{Y}
  \DeclareUTFcomposite[\UTFencname]{x24CF}{\textcircled}{Z}
  \DeclareUTFcomposite[\UTFencname]{x24D0}{\textcircled}{a}
  \DeclareUTFcomposite[\UTFencname]{x24D1}{\textcircled}{b}
  \DeclareUTFcomposite[\UTFencname]{x24D2}{\textcircled}{c}
  \DeclareUTFcomposite[\UTFencname]{x24D3}{\textcircled}{d}
  \DeclareUTFcomposite[\UTFencname]{x24D4}{\textcircled}{e}
  \DeclareUTFcomposite[\UTFencname]{x24D5}{\textcircled}{f}
  \DeclareUTFcomposite[\UTFencname]{x24D6}{\textcircled}{g}
  \DeclareUTFcomposite[\UTFencname]{x24D7}{\textcircled}{h}
  \DeclareUTFcomposite[\UTFencname]{x24D8}{\textcircled}{i}
  \DeclareUTFcomposite[\UTFencname]{x24D9}{\textcircled}{j}
  \DeclareUTFcomposite[\UTFencname]{x24DA}{\textcircled}{k}
  \DeclareUTFcomposite[\UTFencname]{x24DB}{\textcircled}{l}
  \DeclareUTFcomposite[\UTFencname]{x24DC}{\textcircled}{m}
  \DeclareUTFcomposite[\UTFencname]{x24DD}{\textcircled}{n}
  \DeclareUTFcomposite[\UTFencname]{x24DE}{\textcircled}{o}
  \DeclareUTFcomposite[\UTFencname]{x24DF}{\textcircled}{p}
  \DeclareUTFcomposite[\UTFencname]{x24E0}{\textcircled}{q}
  \DeclareUTFcomposite[\UTFencname]{x24E1}{\textcircled}{r}
  \DeclareUTFcomposite[\UTFencname]{x24E2}{\textcircled}{s}
  \DeclareUTFcomposite[\UTFencname]{x24E3}{\textcircled}{t}
  \DeclareUTFcomposite[\UTFencname]{x24E4}{\textcircled}{u}
  \DeclareUTFcomposite[\UTFencname]{x24E5}{\textcircled}{v}
  \DeclareUTFcomposite[\UTFencname]{x24E6}{\textcircled}{w}
  \DeclareUTFcomposite[\UTFencname]{x24E7}{\textcircled}{x}
  \DeclareUTFcomposite[\UTFencname]{x24E8}{\textcircled}{y}
  \DeclareUTFcomposite[\UTFencname]{x24E9}{\textcircled}{z}
  \DeclareUTFcomposite[\UTFencname]{x24EA}{\textcircled}{0}
  \DeclareUTFcharacter[\UTFencname]{x25EF}{\textbigcircle}
  \DeclareUTFcomposite[\UTFencname]{x3251}{\textcircled}{21}
  \DeclareUTFcomposite[\UTFencname]{x3252}{\textcircled}{22}
  \DeclareUTFcomposite[\UTFencname]{x3253}{\textcircled}{23}
  \DeclareUTFcomposite[\UTFencname]{x3254}{\textcircled}{24}
  \DeclareUTFcomposite[\UTFencname]{x3255}{\textcircled}{25}
  \DeclareUTFcomposite[\UTFencname]{x3256}{\textcircled}{26}
  \DeclareUTFcomposite[\UTFencname]{x3257}{\textcircled}{27}
  \DeclareUTFcomposite[\UTFencname]{x3258}{\textcircled}{28}
  \DeclareUTFcomposite[\UTFencname]{x3259}{\textcircled}{29}
  \DeclareUTFcomposite[\UTFencname]{x325A}{\textcircled}{30}
  \DeclareUTFcomposite[\UTFencname]{x325B}{\textcircled}{31}
  \DeclareUTFcomposite[\UTFencname]{x325C}{\textcircled}{32}
  \DeclareUTFcomposite[\UTFencname]{x325D}{\textcircled}{33}
  \DeclareUTFcomposite[\UTFencname]{x325E}{\textcircled}{34}
  \DeclareUTFcomposite[\UTFencname]{x325F}{\textcircled}{35}
  \DeclareUTFcomposite[\UTFencname]{x32B1}{\textcircled}{36}
  \DeclareUTFcomposite[\UTFencname]{x32B2}{\textcircled}{37}
  \DeclareUTFcomposite[\UTFencname]{x32B3}{\textcircled}{38}
  \DeclareUTFcomposite[\UTFencname]{x32B4}{\textcircled}{39}
  \DeclareUTFcomposite[\UTFencname]{x32B5}{\textcircled}{40}
  \DeclareUTFcomposite[\UTFencname]{x32B6}{\textcircled}{41}
  \DeclareUTFcomposite[\UTFencname]{x32B7}{\textcircled}{42}
  \DeclareUTFcomposite[\UTFencname]{x32B8}{\textcircled}{43}
  \DeclareUTFcomposite[\UTFencname]{x32B9}{\textcircled}{44}
  \DeclareUTFcomposite[\UTFencname]{x32BA}{\textcircled}{45}
  \DeclareUTFcomposite[\UTFencname]{x32BB}{\textcircled}{46}
  \DeclareUTFcomposite[\UTFencname]{x32BC}{\textcircled}{47}
  \DeclareUTFcomposite[\UTFencname]{x32BD}{\textcircled}{48}
  \DeclareUTFcomposite[\UTFencname]{x32BE}{\textcircled}{49}
  \DeclareUTFcomposite[\UTFencname]{x32BF}{\textcircled}{50}
}
\ifengine{\UTFDeclarations}{\UTFDeclarations}{}
%
%    \end{macrocode}
% \section{textcomp}
% The package \pkgname{mathcomp} loads the \pkgname{textcomp} in
% order to define the |TS1| encoding.\FIRE revisit, certainly we may not
% need them in a unicode enabled font.
%
%    \begin{macrocode}
\ifxetex\else\ifluatex\else
  \RequirePackage{textcomp}
  \PassOptionsToPackage{mathcomp}{rmdefault}
  \RequirePackage{mathcomp}
  \fi
\fi
%    \end{macrocode}
% 
% 
%
% \section{The exscale package}
%
% 
% \index{Packages>exscale}
%
%This package implements scaling of the math extension font |cmex|. If this package is used the site needs 
% scaled versions of the font |cmex10| in the sizes 10.95pt, 12pt, 14.4pt, 17.28pt, 20.74pt, and 24.88pt (corresponding 
% to standard magsteps using |\magstephalf|, and |\magstep1| through |\magstep5|). 
% Additionally |cmex| variants for the sizes |7pt| to |9pt| are necessary. These fonts are part of the AMS font pack­age.
%
%    \begin{macrocode}
\ifxetex
    \else
     \ifluatex
     \else
       %\RequirePackage{exscale}
       %\RequirePackage{relsize}
     \fi
\fi
%    \end{macrocode}
% 
%
% An example to scale math using the \pkg{exscale} package. Perhaps for
% using slides etc.
% ^^A\begin{minipage}[c]{1.0\textwidth}%
%^^A \centering\large\[
%^^A\int_{-1}^{+1}\frac{f(x)}{\sqrt{1-x^{2}}}\,\mathrm{d}x\approx\frac{\pi}{n}%
%^^A\sum_{i=1}^{n}f\left(\cos\left(\frac{2i-1}{2n}\right)\right)\]
%^^A\end{minipage}%
%
% \section{textcomp}
%
% {tabitem} The \pkgname{textcomp} 
%  provides a nice helper macro for typesetting symbols in normal, bold
%  and italics. I must think of a more semantic name than |tabitem|.
%
%    \begin{macrocode}
\newcommand{\tabitem}[2]{%
  \texttt{\symbol{`\\}#1} & \@nameuse{#1} 
   & \bfseries\@nameuse{#1}& \itshape\@nameuse{#1}
   \ifthenelse{\equal{#2}{}}
    {}
    {& \texttt{\symbol{`\\}#2} & \@nameuse{#2} 
     & \bfseries\@nameuse{#2}
     & \itshape\@nameuse{#2} \\}
}
%    \end{macrocode}
% 
%
%    \begin{macrocode}
%\setlength{\LTleft}{0pt}%
%\setlength{\LTright}{0pt}
%\noindent
%\begin{longtable}{%
%    @{}ll@{}l@{}l@{\extracolsep{\fill}}l!{\extracolsep{0pt}}l@{}l@{}l@{}}
%  \multicolumn{4}{c}{\textbf{Symbol}} & 
%  \multicolumn{4}{c}{\textbf{Symbol}} \\ 
%  \midrule
%\endhead
%
%%  \tabitem{textcapitalcompwordmark}{textascendercompwordmark}
%  \tabitem{textquotestraightbase}{textquotestraightdblbase}
%  \tabitem{texttwelveudash}{textthreequartersemdash}
%  \tabitem{textleftarrow}{textrightarrow}
%  \tabitem{textblank}{textdollar}
%  \tabitem{textquotesingle}{textasteriskcentered}
%  \tabitem{textdblhyphen}{textfractionsolidus}
%  \tabitem{textzerooldstyle}{textoneoldstyle}
%  \tabitem{texttwooldstyle}{textthreeoldstyle}
%  \tabitem{textfouroldstyle}{textfiveoldstyle}
%  \tabitem{textsixoldstyle}{textsevenoldstyle}
%  \tabitem{texteightoldstyle}{textnineoldstyle}
%  \tabitem{textlangle}{textminus}
%  \tabitem{textrangle}{textmho}
%  \tabitem{textbigcircle}{textohm}
%  \tabitem{textlbrackdbl}{textrbrackdbl}
%  \tabitem{textuparrow}{textdownarrow}
%  \tabitem{textasciigrave}{textborn}
%  \tabitem{textdivorced}{textdied}
%  \tabitem{textleaf}{textmarried}
%  \tabitem{textmusicalnote}{texttildelow}
%  \tabitem{textdblhyphenchar}{textasciibreve}
%  \tabitem{textasciicaron}{textgravedbl}
%  \tabitem{textacutedbl}{textdagger}
%  \tabitem{textdaggerdbl}{textbardbl}
%  \tabitem{textperthousand}{textbullet}
%  \tabitem{textcelsius}{textdollaroldstyle}
%  \tabitem{textcentoldstyle}{textflorin}
%  \tabitem{textcolonmonetary}{textwon}
%  \tabitem{textnaira}{textguarani}
%  \tabitem{textpeso}{textlira}
%  \tabitem{textrecipe}{textinterrobang}
%  \tabitem{textinterrobangdown}{textdong}
%  \tabitem{texttrademark}{textpertenthousand}
%  \tabitem{textpilcrow}{textbaht}
%  \tabitem{textnumero}{textdiscount}
%  \tabitem{textestimated}{textopenbullet}
%  \tabitem{textservicemark}{textlquill}
%  \tabitem{textrquill}{textcent}
%  \tabitem{textsterling}{textcurrency}
%^^A  \tabitem{textyen}{textbrokenbar}
%  \tabitem{textsection}{textasciidieresis}
%  \tabitem{textcopyright}{textordfeminine}
%  \tabitem{textcopyleft}{textlnot}
%  \tabitem{textcircledP}{textregistered}
%  \tabitem{textasciimacron}{textdegree}
%  \tabitem{textpm}{texttwosuperior}
%  \tabitem{textthreesuperior}{textasciiacute}
%  \tabitem{textmu}{textparagraph}
%  \tabitem{textperiodcentered}{textreferencemark}
%  \tabitem{textonesuperior}{textordmasculine}
%  \tabitem{textsurd}{textonequarter}
%  \tabitem{textonehalf}{textthreequarters}
%  \tabitem{texteuro}{texttimes}
%  \tabitem{textdiv}{}
%
%
%\end{longtable}
%    \end{macrocode}
%
% \section{wasysym} 
%\url{http://tex.stackexchange.com/questions/80053/wasysym-symbols-render-to-something-different}
%    \begin{macrocode}
\ExplSyntaxOn
\newif\ifWASY
\newcommand\WASY{\pkgname{wasysym}}
\IfStyFileExists{wasysym}
  {\WASYtrue
   \save_symbol:{lightning}
   \save_symbol:{Box}
   \save_symbol:{Diamond}
   \save_symbol:{clock}
   \RequirePackage{wasysym}
   \restore_symbol:{WASY}{lightning}
   \restore_symbol:{WASY}{Box}
   \restore_symbol:{WASY}{Diamond}
   \restore_symbol:{WASY}{clock}
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
% 
%
% \section{pifont}
% Using symbol fonts is supported by means of the 
% \pkgname{pifont} package, providing commands for using the Zapf Dingbats font,
% as well as an interface to other families.\footnote{%
% This section was adopted, with minor changes, 
% from \cite{Mittelbach2004}}.
% 
%    \begin{macrocode}
\newif\ifPI
\newcommand\PI{\pkgname{pifont}}
\IfStyFileExists{pifont}
  {\PItrue\RequirePackage{pifont}}
  {}  
%    \end{macrocode}
% 
% 
% 
%\begin{table}[bt!]
% \bgroup
% \let\oldding\ding
% \def\ding#1{{\color{teal}\oldding{#1}}}
% 
%  \caption{The characters in the postscript font Zapf Dingbats} 
%  \label{tab:dingbats}
%  \centering
%  
%{\footnotesize
%\begin{tabular}{|rr|rr|rr|rr|rr|rr|rr|rr|}
%\hline
%32 &  \ding{32} & 33 &  \ding{33} & 34 &  \ding{34} & 35 &  \ding{35} & 36 &  \ding{36} & 37 &  \ding{37} & 38 &  \ding{38} & 39 &  \ding{39}  \\ \hline
%40 &  \ding{40} & 41 &  \ding{41} & 42 &  \ding{42} & 43 &  \ding{43} & 44 &  \ding{44} & 45 &  \ding{45} & 46 &  \ding{46} & 47 &  \ding{47}  \\ \hline
%48 &  \ding{48} & 49 &  \ding{49} & 50 &  \ding{50} & 51 &  \ding{51} & 52 &  \ding{52} & 53 &  \ding{53} & 54 &  \ding{54} & 55 &  \ding{55}  \\ \hline
%56 &  \ding{56} & 57 &  \ding{57} & 58 &  \ding{58} & 59 &  \ding{59} & 60 &  \ding{60} & 61 &  \ding{61} & 62 &  \ding{62} & 63 &  \ding{63}  \\ \hline
%64 &  \ding{64} & 65 &  \ding{65} & 66 &  \ding{66} & 67 &  \ding{67} & 68 &  \ding{68} & 69 &  \ding{69} & 70 &  \ding{70} & 71 &  \ding{71}  \\ \hline
%72 &  \ding{72} & 73 &  \ding{73} & 74 &  \ding{74} & 75 &  \ding{75} & 76 &  \ding{76} & 77 &  \ding{77} & 78 &  \ding{78} & 79 &  \ding{79}  \\ \hline
%80 &  \ding{80} & 81 &  \ding{81} & 82 &  \ding{82} & 83 &  \ding{83} & 84 &  \ding{84} & 85 &  \ding{85} & 86 &  \ding{86} & 87 &  \ding{87}  \\ \hline
%88 &  \ding{88} & 89 &  \ding{89} & 90 &  \ding{90} & 91 &  \ding{91} & 92 &  \ding{92} & 93 &  \ding{93} & 94 &  \ding{94} & 95 &  \ding{95}  \\ \hline
%96 &  \ding{96} & 97 &  \ding{97} & 98 &  \ding{98} & 99 &  \ding{99} & 100 &  \ding{100} & 101 &  \ding{101} & 102 &  \ding{102} & 103 &  \ding{103}  \\ \hline
%104 &  \ding{104} & 105 &  \ding{105} & 106 &  \ding{106} & 107 &  \ding{107} & 108 &  \ding{108} & 109 &  \ding{109} & 110 &  \ding{110} & 111 &  \ding{111}  \\ \hline
%112 &  \ding{112} & 113 &  \ding{113} & 114 &  \ding{114} & 115 &  \ding{115} & 116 &  \ding{116} & 117 &  \ding{117} & 118 &  \ding{118} & 119 &  \ding{119}  \\ \hline
%120 &  \ding{120} & 121 &  \ding{121} & 122 &  \ding{122} & 123 &  \ding{123} & 124 &  \ding{124} & 125 &  \ding{125} & 126 &  \ding{126} &     &              \\ \hline
%    &             & 161 &  \ding{161} & 162 &  \ding{162} & 163 &  \ding{163} & 164 &  \ding{164} & 165 &  \ding{165} & 166 &  \ding{166} & 167 &  \ding{167}  \\ \hline
%168 &  \ding{168} & 169 &  \ding{169} & 170 &  \ding{170} & 171 &  \ding{171} & 172 &  \ding{172} & 173 &  \ding{173} & 174 &  \ding{174} & 175 &  \ding{175}  \\ \hline
%176 &  \ding{176} & 177 &  \ding{177} & 178 &  \ding{178} & 179 &  \ding{179} & 180 &  \ding{180} & 181 &  \ding{181} & 182 &  \ding{182} & 183 &  \ding{183}  \\ \hline
%184 &  \ding{184} & 185 &  \ding{185} & 186 &  \ding{186} & 187 &  \ding{187} & 188 &  \ding{188} & 189 &  \ding{189} & 190 &  \ding{190} & 191 &  \ding{191}  \\ \hline
%192 &  \ding{192} & 193 &  \ding{193} & 194 &  \ding{194} & 195 &  \ding{195} & 196 &  \ding{196} & 197 &  \ding{197} & 198 &  \ding{198} & 199 &  \ding{199}  \\ \hline
%200 &  \ding{200} & 201 &  \ding{201} & 202 &  \ding{202} & 203 &  \ding{203} & 204 &  \ding{204} & 205 &  \ding{205} & 206 &  \ding{206} & 207 &  \ding{207}  \\ \hline
%208 &  \ding{208} & 209 &  \ding{209} & 210 &  \ding{210} & 211 &  \ding{211} & 212 &  \ding{212} & 213 &  \ding{213} & 214 &  \ding{214} & 215 &  \ding{215}  \\ \hline
%216 &  \ding{216} & 217 &  \ding{217} & 218 &  \ding{218} & 219 &  \ding{219} & 220 &  \ding{220} & 221 &  \ding{221} & 222 &  \ding{222} & 223 &  \ding{223}  \\ \hline
%224 &  \ding{224} & 225 &  \ding{225} & 226 &  \ding{226} & 227 &  \ding{227} & 228 &  \ding{228} & 229 &  \ding{229} & 230 &  \ding{230} & 231 &  \ding{231}  \\ \hline
%232 &  \ding{232} & 233 &  \ding{233} & 234 &  \ding{234} & 235 &  \ding{235} & 236 &  \ding{236} & 237 &  \ding{237} & 238 &  \ding{238} & 239 &  \ding{239}  \\ \hline
%    &             & 241 &  \ding{241} & 242 &  \ding{242} & 243 &  \ding{243} & 244 &  \ding{244} & 245 &  \ding{245} & 246 &  \ding{246} & 247 &  \ding{247}  \\ \hline
%248 &  \ding{248} & 249 &  \ding{249} & 250 &  \ding{250} & 251 &  \ding{251} & 252 &  \ding{252} & 253 &  \ding{253} & 254 &  \ding{254} &     &              \\ \hline
%\end{tabular}
% \let\ding\oldding
%\egroup
%\par}
% \label{tbl:dingbats}
% \end{table}
%
%
%    
% \section{marvosym}
%
% The package \ctan{marvosym} underwent a major rewrite for the 2000/05/01 version, adding
% a large number of new symbols.  If it looks like we have only the
% older version, pretend we don't have it at all. The tables illustrating the available symbols have been extracted from \citep{marvosym}.
% 2012-04-06 Version 2.2a: Added PDF with glyph tables (reproduction of Martin’s PDF
% document in TEX by Heiko Oberdiek). Replaced |\EMail| by |\Email| and
% |\CheckedBox| by |\Checkedbox| due to name clashes with other \latex packages
% \FIRE
%
%    \begin{macrocode}  
\ExplSyntaxOn
\newif\ifMARV
\newcommand\MARV{\pkgname{marvosym}}
\IfStyFileExists*{marvosym}
  {\save_symbol:{CheckedBox}
   \RequirePackage{marvosym}[2000/05/01]% Major rewrite at this version.
   \global\MARVtrue
   \restore_symbol:{CheckedBox}{CheckedBox}
   \@ifundefined{Denarius} % \Denarius is a newer symbol.
     {\global\MARVfalse}
     {}
   \@ifundefined{MVRightarrow}% \Mvrightarrow is an even newer symbol.
     {\global\MARVfalse}
     {}
  }
  {}
\ExplSyntaxOff  
%    \end{macrocode}
% 
%


%
%
% \section{bbding} The package provides an easy-to-use interface to the \texttt{bbding} symbol
%   set developed by \emph{Karel Horak}.  The naming conventions is made
%   close to \emph{Zapf-Dingbat} as it can be found in \texttt{Wordperfect
%   6.0}, however, sometimes shortening the names.
%   \FIRE
%    \begin{macrocode} 
\ExplSyntaxOn 
\newif\ifDING
\newcommand\DING{\pkgname{bbding}}
\IfStyFileExists{bbding}
  {\DINGtrue
   \save_symbol:{Cross} 
   \save_symbol:{Square}
   \RequirePackage{bbding}
   \restore_symbol:{ding}{Cross} 
   \restore_symbol:{ding}{Square}
  }
  {}     

\newcount\c@lumnsleft
\newcount\t@talcolumns
\newdimen\c@lumnwidth
\newenvironment{commandsInColumns}[1]{%
  \t@talcolumns=#1\advance\t@talcolumns-1\c@lumnsleft=\t@talcolumns%
  \c@lumnwidth=-2em\multiply\c@lumnwidth by \t@talcolumns%
  \advance\c@lumnwidth by\hsize \divide\c@lumnwidth by #1%
  \vskip\z@     % Ensures vertical mode
  \catcode`\^^M=12%
  \hbox\bgroup%
  \st@rtenv%
}
{\ifnum\c@lumnsleft=\t@talcolumns \egroup
 \else \egroup \fi}
%
{\catcode`\^^M=12%
 \gdef\st@rtenv{\@ifnextchar^^M{\dr@pnext\doNextComm@nd}{\doNextComm@nd}}%
 \gdef\setComm@nd#1#2^^M{%
   \hbox to \c@lumnwidth%
     {\hbox to .5cm{#1\hss}\hbox{\expandafter\setn@me\string#1.}\hss}%
   \advance\c@lumnsleft-1%
   \ifnum\c@lumnsleft>0%
     \hskip2em%
   \else%
     \egroup%
     \hbox\bgroup%
     \c@lumnsleft\t@talcolumns%
   \fi%
   \doNextComm@nd%
  }}
\def\dr@pnext#1#2{#1}
\def\doNextComm@nd{\@ifnextchar\end{}{\setComm@nd}}%
\def\setn@me#1#2.{\CSname{#2}}
%
%
\newcommand{\CSname}[1]{\texttt{\protect\bslash#1}}
\ExplSyntaxOff
%    \end{macrocode}
% 
%\section{Eurosym}
% The new European currency symbol for the Euro implemented in Metafont, using the official European Commission dimensions, and providing several shapes (normal, slanted, bold, outline). The package also includes a LaTeX package which defines the macro, pre-compiled tfm files, and documentation. We keep it here, with the option max to enable comparisons with the
% Comprehensive.
%
%    \begin{macrocode}
\ExplSyntaxOn
\newif\ifEUSYM\EUSYMfalse
\newcommand\EUSYM{\pkgname{eurosym}}
\IfStyFileExists{eurosym}
  {\EUSYMtrue
   \save_symbol:{EUR}
   \usepackage{eurosym}
   \restore_symbol:{MARV}{EUR}
  }
  {}
%    \end{macrocode}
% 
% \section{esvect}
% The package \pkgname{esvect} allows typesetting vectors. Several arrows are
%  available.
%    \begin{macrocode}
\newif\ifESV\ESVfalse
\newcommand\ESV{\pkgname{esvect}}
\ExplSyntaxOff
\IfStyFileExists{esvect}
  {\ESVtrue
   \RequirePackage{esvect}
   \DeclareMathSymbol{\fldra}{\mathrel}{esvector}{'021}
   \DeclareMathSymbol{\fldrb}{\mathrel}{esvector}{'022}
   \DeclareMathSymbol{\fldrc}{\mathrel}{esvector}{'023}
   \DeclareMathSymbol{\fldrd}{\mathrel}{esvector}{'024}
   \DeclareMathSymbol{\fldre}{\mathrel}{esvector}{'025}
   \DeclareMathSymbol{\fldrf}{\mathrel}{esvector}{'026}
   \DeclareMathSymbol{\fldrg}{\mathrel}{esvector}{'027}
   \DeclareMathSymbol{\fldrh}{\mathrel}{esvector}{'030}
  }
  {}

%    \end{macrocode}
% 
% \section{Chemistry}
% Fire random errors 
%    \begin{macrocode}
  \RequirePackage{mhchem}
  \RequirePackage{chemfig}
%    \end{macrocode}

% \section{The \texttt{manfnt} package.}
% 
% The \TeX{} and metafont manuals use some special symbols not found in
% the normal CM-fonts. The \pkgname{manfnt} provides additional symbols.
% Most of these symbols will be of little use for
% the average author, but some, like the ``Dangerous Bend'' sign may be
% approriate for some textbooks. As the author states, these symbols tend
% to detract the user; I have included them for the sake of the dangerbend
% symbol. The package is currently maintained by Axel Kielhorn.
%
%    \begin{macrocode}
\newif\ifMAN
\newcommand\MAN{\pkgname{manfnt}}
\IfStyFileExists{manfnt}
  {\MANtrue\RequirePackage{manfnt}}
  {} 

%    \end{macrocode}
%
%  We also describe an environment with danger bends, just for fun.
% 
%    \begin{macrocode}    
\ExplSyntaxOn
  \newenvironment {ddanger}
 {
  \begin{trivlist}\item[]\noindent
  \begingroup\hangindent=3.5pc\hangafter=-2
  \cs_set_nopar:Npn \par{\endgraf\endgroup}
  \hbox to0pt{\hskip-\hangindent\dbend\kern2pt\dbend\hfill}\ignorespaces
 }{
  \par\end{trivlist}
 }
\ExplSyntaxOff
%    \end{macrocode}
%
% \begin{figure} \small 
%   \begin{commandsInColumns}{3}
%     \dbend
%     \lhdbend
%     \reversedvideodbend
%   \end{commandsInColumns}
% \caption{Double bend warning signs from the manfnt package.}
% \end{figure}
%
%
% I am not too sure if I should leave the package here for the long
% term or remove it, perhaps make a "bundle" for LaTeX authors. This package I normally use for the fire symbol for hot issues for my Team.
%
% \section{ifsym}
% 
%    \begin{macrocode}

\ExplSyntaxOn
\newif\ifIFS
\newcommand\IFS{\pkgname{ifsym}}
\IfStyFileExists{ifsym}
  {\IFStrue
   \save_symbol:{Letter} 
   \save_symbol:{Square} 
   \save_symbol:{Cross} 
   \save_symbol:{Sun}
   \save_symbol:{TriangleUp} \save_symbol:{TriangleDown} \save_symbol:{Circle}
   \save_symbol:{Lightning}
   \RequirePackage[alpine,clock,electronic,geometry,misc,weather]{ifsym}[2000/04/18]
   \restore_symbol:{ifs}{Letter} \restore_symbol:{ifs}{Square}
   \restore_symbol:{ifs}{Cross} \restore_symbol:{ifs}{Sun}
   \restore_symbol:{ifs}{TriangleUp} \restore_symbol:{ifs}{TriangleDown}
   \restore_symbol:{ifs}{Circle} \restore_symbol:{ifs}{Lightning}
   \DeclareRobustCommand{\allCubes}{%
     \Cube{1}~%
     \Cube{2}~%
     \Cube{3}~%
     \Cube{4}~%
     \Cube{5}~%
     \Cube{6}%
   }
  }
  {}  
\ExplSyntaxOff  
%    \end{macrocode}
% 
% The |ifsym| package can produce some fancy symbols such as \Cube{1},\Cube{6} etc. a cross \Cross
% a \TriangleUp      {\color{red}\TriangleDown}. The documentation is in postscript?  \PulseHigh \showclock{0}{45} \ifsLightning \lhdbend
%
% \subsection{Weather Symbols}
% \begin{figure}[h] \small 
% \begin{commandsInColumns}{3}
% \Sun
% \HalfSun
% \NoSun
% \Fog
% \ThinFog
% \Rain
% \WeakRain
% \Hail
% \Sleet
% \Snow
% \Lightning
% \Cloud
% \RainCloud
% \WeakRainCloud
% \SunCloud
% \SnowCloud
% \FilledCloud
% \FilledRainCloud
% \FilledWeakRainCloud
% \FilledSunCloud
% \FilledSnowCloud
%\end{commandsInColumns}
% \allCubes
% \caption{ifsym Weather symbols}
% \end{figure}
%
% \begin{figure}[h] \small 
% \begin{commandsInColumns}{3}
% \Telephone
% \SectioningDiamond
% \FilledSectioningDiamond
% \PaperPortrait
% \PaperLandscape
% \Irritant
% \Fire
% \Radiation
% \StrokeOne
% \StrokeTwo
% \StrokeThree
% \StrokeFour
% \StrokeFive
%\end{commandsInColumns}
% {\Huge\color{yellow!60}\Radiation}
% \caption{ifsym misc symbols}
% \end{figure}
%
% \begin{figure}[h] \small 
% \begin{commandsInColumns}{3}
%\Taschenuhr
%\VarTaschenuhr
%\StopWatchStart
%\StopWatchEnd
%\Interval
%\Wecker
%\VarClock
%\end{commandsInColumns}
% 
% \caption{ifsym clock option symbols symbols}
% \end{figure}
%
% \subsection{The \texttt{undertilde} package}      
%    \begin{macrocode}    
\newif\ifUTILD
\newcommand\UTILD{\pkgname{undertilde}}
\IfStyFileExists{undertilde}
  {\UTILDtrue\RequirePackage{undertilde}}
  {}
%    \end{macrocode}
%
% 
% \section{Saving files on the fly filecontents}
% We use the \pkg{phdfilecontents} package, to open and write files on disk on the fly.
% See the sample manual as to how to use. This is a hack of the \latexe |filecontents|
% in order to work harmoniously with the \pkgname{morewrites} package.
%
%    \begin{macrocode}latex
\RequirePackage{phdfilecontents}
%    \end{macrocode}   
%    
% \chapter{Utilities for programming}
% The below packages offer some good utilities that you may find useful, if you are
% going to program and develop additional macros.
%
% \section{The changepage package}
% |\strictpagecheck| can be used effectively for a number of situations, where you need to 
% know if you are on an odd or even page.
%    \begin{macrocode}
\RequirePackage{changepage}  
 
\RequirePackage{keyval}
\usepackage{xkvview}
\RequirePackage{ifmtarg}
\RequirePackage{fp}
%    \end{macrocode}
%
% \section{ifthenx}
%
%    \begin{macrocode}
\RequirePackage{ifthenx}
%    \end{macrocode}
% \section{xspace}
% A very useful package, but get to know its limitations.
%    \begin{macrocode}
\RequirePackage{xspace}
%    \end{macrocode}
%    \begin{macrocode}
\RequirePackage{xstring}
% \RequirePackage{cool, coolstr} conflicts to be resolved.
\RequirePackage{multido}
\RequirePackage{etoolbox}
\RequirePackage{parselines}
%    \end{macrocode}
%
% for testing in tutorials
%
% \section{Assertions}
% some assertions
%    \begin{macrocode}
\def\TRUE{ \meta{true code} }
\def\FALSE{ \meta{false code} }
\def\PASS{\par{\bfseries\textcolor{green!50!blue}{PASS}}\ ~}
\def\FAIL{\par{\bfseries\textcolor{red!70!black}{FAIL}}\ ~}
% upquote needs to be loaded before listings? Must test
% does not seem to matter actually...
%\RequirePackage{upquote}
%
% \section{Calculations}
% \RequirePackage{remreset}
  \RequirePackage{calc}
%    \end{macrocode}
%
% \chapter{Graphics packages}
%
% \LaTeXe provides the |picture| environment, which is by now mostly
% outdated. However it is still useful for placing text or other
% objects at absolute positions on a page. We load its successors,
% the package \pkg{pict2e} and the \pkg{picture} for maximum
% flexibility.
%
% \section{pict2e and picture}
% We also load a new kid on the block xpicture
%    \begin{macrocode}
% Used in chapter for picture environment. |pict2e| must be used before.
\RequirePackage{pict2e}
\RequirePackage{picture}
%\RequirePackage{xpicture}
%    \end{macrocode}
%     
% \section{The great and famous TikZ package}
% We have loaded |pgf| earlier in order to create the key value interface. We load
% almost all the libraries.
%    \begin{macrocode}
\RequirePackage{tikz}
\usetikzlibrary{%
  arrows,%
  calc,%
  fit,%
  patterns,%
  plotmarks,%
  shapes.geometric,%
  shapes.misc,%
  shapes.symbols,%
  shapes.arrows,%
  shapes.callouts,%
  shapes.multipart,%
  shapes.gates.logic.US,%
  shapes.gates.logic.IEC,%
  er,%
  automata,%
  backgrounds,%
  chains,%
  topaths,%
  trees,%
  petri,%
  mindmap,%
  matrix,%
  calendar,%
  folding,%
  fadings,%
  through,%
  positioning,%
  scopes,%
  decorations.fractals,%
  decorations.shapes,%
  decorations.text,%
  decorations.pathmorphing,%
  decorations.pathreplacing,%
  decorations.footprints,%
  decorations.markings,%
  shadows}
\usetikzlibrary{tikzmark}  
%    \end{macrocode}
%
% \section {pgfplots}
%    \begin{macrocode}
\RequirePackage{pgfplots}
\pgfplotsset{compat=1.11}
\RequirePackage{pgfplotstable}
%    \end{macrocode}
%
% \section{forest}
% A very useful package for all sorts of trees, especially for linguists.
%    \begin{macrocode}
\IfStyFileExists{forest}
  {\RequirePackage {forest}}
  {}
%    \end{macrocode}
%
% \section{drawstack}
%  The \pkgname{drawstack} can be used to draw stacks and other similar structures. Add it to
%  the list for computer science packags.
%
%    \begin{macrocode}
\RequirePackage{drawstack}
%    \end{macrocode}
%    
%
% \section{Float}
% 
% The float package creates additional floats on the fly.
%    \begin{macrocode}
% \RequirePackage{float}
% \RquirePackage{newfloat}
%    \end{macrocode} 
%    
% \section{Newfloat} 
%    
% This package by people{Axel Sommerfelt} offers the command \cs{DeclareFloatingEnvironment} for
% defining new floating environments which behave like figure and table. It tries
% to patch the |\chapter| or \refCom{tableofcontents} command, so we disable the option
% \option{chapterlistgaps}. It is a better option than the \pkgname{float}, described
% above. 
% 
% All other options are settable later, so this would not be an issue.\FIRE 
%    \begin{macrocode}
\ExplSyntaxOn
\tl_new:N \beforehyperhook 
\cs_gset:Npn \putbeforehyperhook #1 
  {
    \tl_gput_left:Nn \beforehyperhook {#1}
  }
\ExplSyntaxOff
%    \end{macrocode} 
%    \begin{macrocode}
% \RequirePackage[chapterlistsgaps=off]{newfloat}
%    \end{macrocode} 
% 
%  \section{Using Hyperref}
%
% 	The \pkgname{hyperref} by Sebastian Rahtz and Heiko Oberdiek \cite{hyperref} 
% 	is indespensible
% for producing electronic versions of documents. As it redefines many commands care
% needs to be taken with certain packages.
% 
% 
% \begin{docCommand}[doc updated=01-6-2015] { BeforeHyperrefHook} {\meta{seq list}}
%  Holds packages that are required to go before Hyperref. Most packages actually have to 
%  before hyperref, others are harmless.\FIRE
% \end{docCommand}
%   
% in document

%    \begin{macrocode}
\newcommand*{\BeforeHyperrefHook}
  {%
 % \putbeforehyperhook
  \RequirePackage{float}%
  \RequirePackage{newfloat}
  }

 
   % \RequirePackage{verse}} TO FIX

\newcommand*{\AfterHyperrefHook}{%
  \RequirePackage{algorithm2e}%
  \RequirePackage{fancyhdr}

  \RequirePackage{datetime} %%scrtime
  \RequirePackage{scrtime}
  \RequirePackage{datenumber}
  \RequirePackage{natbib}
%  \bibliographystyle{cambridgeauthordate}
   \bibliographystyle{abbrvnat}
  \usepackage{bibentry} % needs checking
  %\bibpunct{(}{)}{;}{a}{,}{,}
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% 4. to bring natbib.sty into line with cambridge style
%    and make 'References' the default
%
\@ifpackageloaded{natbib}{%
    \providecommand\refname{References} % internationalize?
    \providecommand\bibname{Bibliography}

%\ifphd@multisty
%  \def\NAT@sectionbib{on}% natbib will use \section* headings
%\fi

\setlength\bibhang{1em}
\renewenvironment{thebibliography}[1]{%
% \bibsection\parindent \z@\bibpreamble\bibfont\list
  \bibsection\parindent \z@\bibpreamble\bibliosize\list
   {\@biblabel{\arabic{NAT@ctr}}}{\@bibsetup{##1}%changed
    \setcounter{NAT@ctr}{0}}%
    \ifNAT@openbib
      \renewcommand\newblock{\par}
    \else
      \renewcommand\newblock{\hskip .11em \@plus.33em \@minus.07em}%
    \fi
    \sloppy\clubpenalty4000\widowpenalty4000
    \sfcode`\.=1000\relax
    \let\citeN\cite \let\shortcite\cite
    \let\citeasnoun\cite
 }{\def\@noitemerr{%
  \PackageWarning{natbib}
     {Empty `thebibliography' environment}}%
  \endlist\vskip-\lastskip}


%\ifphd@multisty
%  \renewcommand\bibsection{\section{\refname %FIX ME FOR PARAMETERS
%    %\ifx\@mkboth\@gobbletwo\else\markright{\refname}\fi
%    }}%
%\else
%  \renewcommand\bibsection{\chapter{\refname %FIX ME STAR CHAPTER
%    %\@mkboth{\refname}{\refname}
%    }}%
%\fi
}{}
}
%
%    \end{macrocode}
%
%  \section{The hyperref package}
%
%  The \pkgname{hyperref} is an excellent piece of software, but the redefining of a lot
%  of kernel commands needs special treatment, so we will provide hooks for packages
%  to be loaded before and after the hyperref package.
%  
%  We call it with no options, as we will set them a bit later.
%
% \begin{docCommand}[doc updated=20-6-2015]{sethyperref} { \marg{hyperref key settings} }  
%   Command to set the hyperref package keys 
% \end{docCommand}
% 
%    \begin{macrocode}
\def\sethyperref{%
  \BeforeHyperrefHook
  \RequirePackage{hyperref}
%% hyperdoc has a problem with tcolorboc documentation
%% macros.
%%\usepackage{hypdoc}
\hypersetup{
  bookmarks,
  raiselinks,
  pageanchor,
  hyperindex=true,
  colorlinks,
  allcolors=theblue, 
  linktocpage,
  hyperfootnotes=true,
  breaklinks=true,
  anchorcolor= theblue,
  filecolor=blue,
  hypertexnames=true, %useguessable names for links
  urlcolor= theblue,
  linkcolor= theblue,
  pdftitle={My Title},
  pdfauthor={Yiannis Lazarides},
  pdfsubject={The phd LaTeX package},
  pdfkeywords={LaTeX package management, document design},
  plainpages=true%do page number anchors as plain Arabic
 }
\AfterHyperrefHook
}
%    \end{macrocode}
% 
% 
% \subsection{algorithms}
% 
% This package must always be loaded after |hyperref|
%
%    \begin{macrocode} 
\newif\ifALGORITHM
\@ifpackageloaded{hyperref}{%
    %%\RequirePackage{algorithms}
 }
 {\typeout{Algorithm loaded}}
  \RequirePackage{algorithm2e} 
%    \end{macrocode}
%     
% \section{Common packages for structuring documents}
% The structuring commands, should ideally be loaded by the class. In case the class
% does not loaded them. We use the \pkg{multicol}, for multiple columns.
%    \begin{macrocode}
\RequirePackage{multicol}
%\RequirePackage[toc]{multitoc}
%    \end{macrocode} 
%    
% 
%

%
% \section{cancel}  
%  
% The \pkgname{ulem}  redefines emphasis so we rather
% use the cancel package.
% \cmd{\uline} \uline{important} underlined text like important
% \uuline{urgent} double-underlined text like urgent
% \uwave{boat} wavy underline like 
% boat
% \sout{wrong} line struck through word like wrong
% \xout{removed} marked over like removed
% \dashuline{dashing} dashed underline like dashing
% \dotuline{dotty} dotted underline like 
% dotty
% 
% Similar functionality is also offered by the \pkgname{soul}
%
%The following commands are defined for general use:\\[5pt]
%  \indent \begin{tabular}{l@{\quad}l}\hline\noalign{\vskip2pt}
%   |\uline{important}|  & underlined text like \uline{important}\\[1pt]
%   |\uuline{urgent}|    & double-underlined text like  \uuline{urgent}\\[1pt]
%   |\uwave{boat}|       & wavy underline like {\let\ULleaders\cleaders\uwave{boat}}\\[1pt]
%   |\sout{wrong}|       & line struck through word like \sout{wrong}\\[1pt]
%   |\xout{removed}|     & marked over like \xout{removed} \\[1pt]
%   |\dashuline{dashing}|& dashed underline like \dashuline{dashing}\\[1pt]
%   |\dotuline{dotty}|   & dotted underline like \dotuline{dotty}\\[3pt]\hline
%  \end{tabular}\\[6pt]
%   Other similar commands can be defined with relative ease by utilizing the
%   \cs{markoverwith} command provided by ulem.

%    \begin{macrocode}
\newif\ifULEM
\IfStyFileExists{ulem}
{\ULEMtrue\RequirePackage[normalem]{ulem}}
{}
%    \end{macrocode}
% 
%
%This is a nice package for canceling anything in mathmode with a slash, 
%backslash or a \verb+X+. To get
%a horizontal line we can define an additional macro called 
%with an optional argument
%for the line color (requires package \pkg{color}):
%
%^^A$ 
%^^A\slashed{D} \slashed{p} \slashed{k} \slashed{r} \slashed{A}
% ^^A\slashed{f} \FIRE
%^^A\slashed{U} \slashed{\partial}
% ^^A$
%    \begin{macrocode}
% If we have slashed.sty, use it.
\newif\ifhaveslashed
\IfStyFileExists*{slashed}
  {\haveslashedtrue\RequirePackage{slashed}}
  {}

\newif\ifhavecancel
\IfStyFileExists*{cancel}
  {\havecanceltrue\RequirePackage{cancel}}
  {}

%    \end{macrocode}
%
%
%It is no problem to redefine the cancel macros to get also colored lines. 
%    \begin{macrocode}
\newcommand\hcancel[2][red]{\setbox0=\hbox{#2}%
	\rlap{\raisebox{.45\ht0}{\textcolor{#1}{\rule{\wd0}{1pt}}}}#2}
%    \end{macrocode}
%A horizontal line for
%single characters is also decribed in section~\vref{sec:Accents}.
%
%\medskip
%\noindent
%^^A\verb+\cancel+: $f(x)=\dfrac{\left(x^2+1\right)\cancel{(x-1)}}{\cancel{(x-1)}(x+1)}$\\[0.5cm]
%^^AAA\verb+\bcancel+: $\bcancel{3}\qquad\bcancel{1234567}$\\[0.5cm]
%^^AAA\verb+\xcancel+: $\xcancel{3}\qquad\xcancel{1234567}$\\[0.5cm]
%^^AA\verb+\hcancel+: $\hcancel{3}\qquad\hcancel[red]{1234567}$
%
%\bigskip
% ^^A \begin{verbatim}
% ^^A $f(x)=\dfrac{\left(x^2+1\right)\cancel{(x-1)}}{\cancel{(x-1)}(x+1)}$\\[0.5cm]
% ^^A $\bcancel{3}\qquad\bcancel{1234567}$\\[0.5cm]
% ^^A $\xcancel{3}\qquad\xcancel{1234567}$\\[0.5cm]
% ^^A $\hcancel{3}\qquad\hcancel[red]{1234567}$
% ^^A \end{verbatim}
%
% \chapter{Archaic}
% \section{staves}
%
% This is a peculiar package providing some old Icelandic runes.
% \runictext{\alphabet}
% \staveXXXV \staveVI \runictext{abcdef}
%    \begin{macrocode}
\newif\ifSTAVE
\newcommand\STAVE{\pkgname{staves}}
\IfStyFileExists{staves}
  {\STAVEtrue\usepackage{staves}}
  {}
%    \end{macrocode}

% No point wasting a math alphabet on shuffle.
%    \begin{macrocode}
\newif\ifSHUF
\newcommand\SHUF{\pkgname{shuffle}}
\IfStyFileExists{shuffle}
  {\let\origDeclareSymbolFont=\DeclareSymbolFont
   \let\origDeclareMathSymbol=\DeclareMathSymbol
   \renewcommand{\DeclareSymbolFont}[5]{}
   \renewcommand{\DeclareMathSymbol}[4]{%
     \DeclareRobustCommand{##1}{{\usefont{U}{shuffle}{m}{n}\char##4\relax}}
   }
   \SHUFtrue
   \RequirePackage{shuffle}
   \let\DeclareSymbolFont=\origDeclareSymbolFont
   \let\DeclareMathSymbol=\origDeclareMathSymbol
  }
  {}
%    \end{macrocode}



%    \begin{macrocode}
\RequirePackage{framed}
\RequirePackage{varioref}
\RequirePackage{setspace}
%    \end{macrocode}
%    \begin{macrocode}

\providecommand*\switch[2]{{\fontfamily{#1}\selectfont #2}}
%    \end{macrocode}  

%
% \section{Producing Math Symbols}
% 
% The centernot package  provides \cs{centernot} 
% that prints the symbol \cs{not} on the
% following argument. Unlike \cs{not} the symbol is horizontally centered. The \pkgname{amssymb} and \pkgname{mathbax} provide built-in symbols. The package
%can be used for building other symbols. 
% (\seedocs{centernot}).
%    \begin{macrocode}
\newif\ifhavecenternot
\IfStyFileExists*{centernot}%
  {\havecenternottrue\RequirePackage{centernot}}
  {}
%    \end{macrocode}
%
% \section{Miscellaneous Packages}
%
%
% We include here everything that does not fit into the other categories.
% 
%    \begin{macrocode} 
\RequirePackage{genealogytree}
%    \end{macrocode}  
%    \begin{macrocode}
\RequirePackage{chngcntr}
\RequirePackage{fourier-orns}
%    \end{macrocode}
%
% \subsection{eso-pic}
% Since we loading pgf, many of the things that eso-pic does can be taken over by |pgf|. I am not too sure
% if we should leave this in the long-term.
%
%    \begin{macrocode}
\RequirePackage{eso-pic}
%\RequirePackage{layouts}
%    \end{macrocode}
%
% The package \pkgname{aplhalph} provides alphabetical numbering. 
%
%   \begin{macrocode}
\RequirePackage{alphalph}
\RequirePackage{fmtcount}
% 
\RequirePackage{varwidth}
%    \end{macrocode}
%
% \subsection{comment}
% The package \pkgname{comment} by \person{Victor}{Eijkhout}
% selectively in/exclude pieces of text: the user can define new comment versions,
% and each is controlled separately. Special comments can be defined where the
% user specifies the action that is to be taken with each comment line.
% This style can be used with plain TEX or LATEX, and probably most other
% packages too.
%    \begin{macrocode}
\RequirePackage{comment}
%    \end{macrocode}
%
% \subsection{textcase}
%    \begin{macrocode}
\RequirePackage{textcase}
%    \end{macrocode}
%
% \subsection{csquotes}
%    \begin{macrocode}
\RequirePackage[autostyle=false]{csquotes}
%    \end{macrocode}
%
% \subsection{csquote}
%
%    \begin{macrocode}
\RequirePackage{alltt}[1997/06/16]
%    \end{macrocode}
%
% \subsection{caption}
%
% We use the \pkgname{caption} for manipulating captions. It saves a lot of code
% and is a well maintained package.

%    \begin{macrocode}
\RequirePackage{caption} % check
\RequirePackage{subcaption}
%\RequirePackage{currfile} affects FileInput problematic

%\RequirePackage{filemod}
%\RequirePackage{afterpage}
%\RequirePackage{environ}
%\RequirePackage{mwe}
%    \end{macrocode}
%
% \section{pdfpages}
% If you need to insert an existing, possibly multi-page, |PDF| file into your 
% LaTeX document, whether or not the included |PDF| was compiled with LaTeX or 
% another tool, consider using the \pkg{pdfpages} package. We load it with
% the option final.
% 
%    \begin{macrocode}
\RequirePackage[final]{pdfpages}
%    \end{macrocode}
% 
%
% Include the pages you want using:
%
%    |\includepdf[pages=3-8]{sample.pdf}|
%
% \section{cclicenses}
%  The \pkgname{cclicenses} doesn't get along with textcomp's remapping of
% \textcircled to the TS1 font encoding.  Mapping it back doesn't
% seem to cause any problems. \FIRE
%
%    \begin{macrocode}
\newif\ifCCLIC
\newcommand\CCLIC{\pkgname{cclicenses}}
% 
\IfStyFileExists{cclicenses}
  {\CCLICtrue
   \RequirePackage{cclicenses}
   \DeclareTextAccentDefault{\textcircled}{OMS}
  }
  {}
%    \end{macrocode}
%  
% \section{Ornaments}      
% 
% The \pkgname{fourier} defines a lot of math symbols, but we care about only a few of
% them.  Hence, we load only the fourier-orns package and manually
% define everything else as text-mode symbols.
% 
%    \begin{macrocode} 
\ifxetex\else
\newif\ifFOUR
\newcommand\FOUR{\pkgname{fourier}}
\IfStyFileExists{fourier}
  {\FOURtrue
   \RequirePackage{fourier-orns}
   % Define single-glyph symbols.
   \DeclareFontEncoding{FMS}{}{}
   \DeclareFontSubstitution{FMS}{futm}{m}{n}
   \DeclareFontEncoding{FML}{}{}
   \DeclareFontSubstitution{FML}{futmi}{m}{it}
   \newcommand{\fourierdef}[6]{%
     \DeclareRobustCommand{##1}{{\usefont{##2}{##3}{##4}{##5}\char##6}}}
   \fourierdef{\parallelslant}{FMS}{futm}{m}{n}{134}
   \fourierdef{\nparallelslant}{FMS}{futm}{m}{n}{143}
   \fourierdef{\FOURrho}{FML}{futmi}{m}{it}{26}
   \fourierdef{\FOURvarrho}{FML}{futmi}{m}{it}{37}
   \fourierdef{\varvarrho}{FML}{futmi}{m}{it}{129}
   \fourierdef{\FOURpi}{FML}{futmi}{m}{it}{25}
   \fourierdef{\FOURvarpi}{FML}{futmi}{m}{it}{36}
   \fourierdef{\varvarpi}{FML}{futmi}{m}{it}{131}
   \fourierdef{\FOURpartial}{FML}{futmi}{m}{it}{64}
   \fourierdef{\varpartialdiff}{FML}{futmi}{m}{it}{130}
   \fourierdef{\FOURtexteuro}{TS1}{futx}{m}{n}{191}
   % Fake a math accent with text-mode commands.
   \DeclareRobustCommand{\FOURfakewidetopaccent}[5]{%
     \setbox0=\hbox{\ensuremath{##1}}%
     \setbox1=\hbox{\ensuremath{abc}}%
     \leavevmode
     \ifdim\wd0<\wd1
       \kern1pt
       \rlap{\raisebox{##2}{\makebox[\wd0]{\usefont{FMX}{futm}{m}{n}\char##3}}}%
       \kern-0.1em
       \box0
     \else
       \rlap{\raisebox{##4}{\makebox[\wd0]{\usefont{FMX}{futm}{m}{n}\char##5}}}%
       \box0
     \fi
   }

   % Manually define Fourier's extensible accents.  Note that we don't
   % bother trying to use Fourier's \mathring to construct the
   % \FOURwidering symbol.
   \DeclareFontEncoding{FMX}{}{}
   \DeclareFontSubstitution{FMX}{futm}{m}{n}
   \DeclareRobustCommand{\FOURwidearc}[1]{%
     \FOURfakewidetopaccent{##1}{0ex}{216}{0.5ex}{217}}
   \DeclareRobustCommand{\FOURwideOarc}[1]{%
     \FOURfakewidetopaccent{##1}{0ex}{228}{0.5ex}{229}}
   \DeclareRobustCommand{\FOURwideparen}[1]{%
     \FOURfakewidetopaccent{##1}{0ex}{148}{0.5ex}{150}}
   \DeclareRobustCommand{\FOURwidering}[1]{\overset{\smash{\vbox to .2ex{%
     \hbox{$\mathring{}$}}}}{\FOURwideparen{##1}}}

   % Manually define Fourier's variable-sized delimiters.
   \newcommand{\fouriercdef}[6]{%
     \DeclareRobustCommand{##1}{%
       \textvcenter{\usefont{##2}{##3}{##4}{##5}\char##6}}}
   \fouriercdef{\FOURtllbracket}{FMX}{futm}{m}{n}{133}
   \fouriercdef{\FOURdllbracket}{FMX}{futm}{m}{n}{139}
   \fouriercdef{\FOURtrrbracket}{FMX}{futm}{m}{n}{134}
   \fouriercdef{\FOURdrrbracket}{FMX}{futm}{m}{n}{140}
   \newcommand*{\FOURverticals}[1]{%
     \vbox{%
       \baselineskip=-\maxdimen
       \lineskiplimit=\maxdimen
       \lineskip=0pt%
       \usefont{FMX}{futm}{m}{n}%
       \ialign{####\cr##1}%
     }%
   }
   \DeclareRobustCommand{\FOURtVERT}{%
     \raisebox{0.5ex}{\textvcenter{\FOURverticals{\char147\cr\char147\cr}}}}
   \DeclareRobustCommand{\FOURdVERT}{%
     \raisebox{0.5ex}{\textvcenter{\FOURverticals{\char147\cr\char147\cr\char147\cr\char147\cr}}}}
  }
  {}
\fi
%    \end{macrocode} 
%
% \section{dirtree}
% 
% The \pkgname{dirtree} developed by \person{Jean-Come}{Charpentier} provides commands to draw directory-like charts. The \pkgname{forest}  is a much better
% alternative.
%    \begin{macrocode}
\IfStyFileExists{dirtree}
{
  \RequirePackage{dirtree}}
{}
%    \end{macrocode}
% 
% \subsection{The package needspace}
%
% The \pkgname{needspace} is currently mainatained by \person{Wills}{Robertson} and was originally developed by 
% \person{Peter}{Wilson} \citeyearpar{needspace}.
% It provides the commands \CMDI{\needspace}\marg{length} and \docAuxCommand{Needspace}\marg{length}, that
% will reserve an additional amount of space on the page as specified by the parameter \emph{length}. 
% 
%    \begin{macrocode}
\IfStyFileExists*{needspace}
  {\RequirePackage{needspace}}
  {\newcommand{\Needspace}[2]{\par \penalty-100\begingroup
     \setlength{\dimen@}{##2}%
     \dimen@ii\pagegoal \advance\dimen@ii-\pagetotal
     \ifdim \dimen@>\dimen@ii
       \break
     \fi\endgroup}
  }
%    \end{macrocode}
%    
% \section{Archaic Symbols}     
%
% These packages are included here, only because I have an interest in
% them in some documents I have. I understand that for the average user
% they might not be of interest. We conditionally load them based on
% a conditional and also to develop the concept of `bundles' which  I
% explain a bit later on.
%
% Uncial font
% 
% \subsection{Linear A}
%    \begin{macrocode}
\RequirePackage{uncial}
\newif\ifarchaic
  \archaictrue
\ifarchaic
%    \end{macrocode}


%    \begin{macrocode}  
\newif\ifLINA
\newcommand\LINA{\pkgname{lineara}}
\IfStyFileExists{lineara}
  {\LINAtrue\RequirePackage{lineara}}
  {}
%    \end{macrocode}
%
% \section{Linear B}
%
%    \begin{macrocode}
\newif\ifLINB
\newcommand\LINB{\pkgname{linearb}}
\IfStyFileExists{linearb}
  {\LINBtrue\RequirePackage{linearb}}
  {}
%    \end{macrocode}
%
% \section{Cypriot}
%    \begin{macrocode}
\newif\ifCYPR
\newcommand\CYPR{\pkgname{cypriot}}
\IfStyFileExists{cypriot}
  {\CYPRtrue\RequirePackage{cypriot}}
  {}
%    \end{macrocode}
%
% \section{South Arabian}
%
%    \begin{macrocode}
\newif\ifSARAB
\newcommand\SARAB{\pkgname{sarabian}}
\IfStyFileExists{sarabian}
  {\SARABtrue\RequirePackage{sarabian}}
  {}
%    \end{macrocode}
%
% \subsection{Cuneiform}
%
% Cuneiform .
%    \begin{macrocode}
\newif\ifPRSN
\newcommand\PRSN{\pkgname{oldprsn}}
\IfStyFileExists{oldprsn}
  {\PRSNtrue\RequirePackage{oldprsn}}
  {}
%    \end{macrocode}
%
% \section{Hieroglyphics}
%
%    \begin{macrocode}  
\RequirePackage{hieroglf}
%    \end{macrocode}
%
% \section{Ugaritic}
% The \pkgname{uragite}
%
%    \begin{macrocode}
\newif\ifUGAR
\newcommand\UGAR{\pkgname{ugarite}}
\RequirePackage{ugarite}
\IfStyFileExists{ugarite}
  {\UGARtrue\RequirePackage{ugarite}}
  {}
%end archaic   
%    \end{macrocode}
%
% \section{Epi-Olmec}
%
% We load the \pkgname{epiolmec} for typesetting the Epi-Olmec script. This is described
% in the scripts chapters.
%
%    \begin{macrocode}
\newif\ifOLMEC
\newif\ifscriptolmec \scriptolmectrue
\cxset{olmec/.is if=scriptolmec}
\cxset{olmec=true}
% 
\ifscriptolmec
\RequirePackage{epiolmec}
\IfStyFileExists{epiolmec}
  {\OLMECtrue\RequirePackage{epiolmec}}
  {}
\fi
%    \end{macrocode}
%
% \section{Ancient Greek}
%
% \subsection{Philokalia}
%
% We load the \pkgname{philokalia} for typesetting ancient greek using the \idxfont{philokalia} font.
% The package loads the \pkgname{xlextra}, which we do not want. It is loaded by fontspec
% as required.
% If we are using luatex this will issue a warning and abort. Better to fake it for both.
% Also modifies lettrine package !aha this took long!
%    \begin{macrocode}

\newif\ifPHILOKALIA
\def\loadphilokalia{%
  \@namedef{ver@xltxtra.sty}{}% a fake for a "xlextra" package
  \RequirePackage{philokalia}
  \IfStyFileExists{philokalia}
    {\PHILOKALIAtrue\RequirePackage{philokalia}}
    {}
}%
% provides \plk to set font
\ifengine{\loadphilokalia}{\loadphilokalia}{}
\ifPHILOKALIA
  \newfontfamily\plk{Philokalia-Regular}
  \newfontfamily\PHtitl[Script=Greek,RawFeature=+titl;grek]{Philokalia-Regular}
\fi
\def\diacritic#1{{#1\LARGE ῾◌◌\char"0375}}
\newfontfamily\greek[Script=Greek,Scale=1.0]{Arial Unicode MS}
\def\greektext#1{\greek{#1}}
%\diacritic{\greek}
 \newsavebox{\philobox}
 \savebox{\philobox}{\PHtitl Π}
%\def\philokalialettrine#1{}  
%    \end{macrocode}
%
%
%</PKG>
%
\endinput
