% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
phd-runningheads 
A package to manage running heads in LaTeX
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
This file provides a template for defining a class.
%</readme>
%<*todo>
Improve on User markup
%</todo>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
phd-runningheads 
A package to manage running heads in LaTeX
E-mail: yannislaz@gmail.com
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------
\endpreamble
\postamble
 Copyright (C) 2015 by Dr. Yiannis Lazarides <yannislaz@gmail.com>
\endpostamble
%\usedir{tex/latex/\jobname}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{RH}}
 }
%</install>
%<install>\endbatchfile

%<*internal>
%\usedir{source/latex/\jobname}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
%\usedir{doc/latex/demopkg}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
%\generate{
%  \file{phd-testhead.tex}{\from{\jobname.dtx}{TEST}}
%}
%\generate{
%  \file{TODO.tex}{\from{\jobname.dtx}{TODO}}
%}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>
\NeedsTeXFormat{LaTeX2e}
\ProvidesFile{phd-runningheads.drv}%
  [2013/01/13 v1.0 ]%
\documentclass[twoside,11pt,a4paper]{ltxdoc}
\usepackage[bottom=4cm,footskip=3cm,
            headsep=2cm]{geometry}
\savegeometry{std}
\usepackage{phd}
\usepackage{phd-lowersections}
\usepackage{phd-runningheads}
\input{defaults-chapters}
\sethyperref
\EnableCrossrefs
\CodelineIndex
\RecordChanges
       
\begin{document}
  \let\bold\bfseries
 \coverpage{desert}{Book Design Monographs}{Camel Press}{ON RUNNING HEADS}{AND THEIR DESIGN} 
 \secondpage
 \newpage
 %\tableofcontents
 \mainmatter
 \thispagestyle{plain}
 \input{./sections/headersandfooters01}
  % \catcode `\| =12
%  \DeleteShortVerb
  \makeatletter
  \@debugtrue
  \makeatother
  \cxset{headings odd header background color = white,
         headings even header background color = white,
  }
  \DocInput{phd-runningheads.dtx}%
\end{document}
%</driver>
% \fi
%
% \CheckSum{553}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2011/05/03}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \GetFileInfo{template.dtx}
% \providecommand*{\url}{\texttt}
%  \def\fileversion{v1.0}          
%  \def\filedate{2012/03/06}
% \title{The \textsf{\jobname} package.
% \author{Dr. Yiannis Lazarides}
% \thanks{This
%        file (\texttt{\jobname.dtx}) has version number 
%        \fileversion, last revised
%        \filedate.}
% }
% 
% \date{\filedate}
%
%% \newpage
% \maketitle
% 
% \begin{summary}
%   This package forms part of the \pkgname{phd} bundle and can be used to manage running heads
%   with a key-value interface. It comes with a number of predefined styles, that cover most of the
%  common use cases for books and journals. It is still in alpha stage. However it will not hopefully
%  break anything if used and is compatible with the fancyhdr package.
% \end{summary}
%
% 


% 
%
%
% ^^A\StopEventually{}
% 
% \chapter{Package Objectives and Implementation}
%  \thispagestyle{plain}
%  
% \begin{enumerate}
%  \item To simplify the user interface for specifying  headers and footers in \latexe.
% \item To make available a number of differently styled page headers to lessen
% the need for book designers to have to create new ones.
% \item To provide a key value interface to blend with the other keys provided by
%  the \pkgname{phd}  package.
% \end{enumerate}
%
% \section{Simplifying the terminology}
%
%  \begin{description}
%  \item [header] The top part of the page where a running head can be inserted.
%  \item [footer]  The bottom part of the page, where a running footer can be inserted.
%  \item [header odd] The header on an odd page.
%  \item [header even] The header on an even page.
%  \item [footer odd] The footer on an odd page.
%  \item [footer even] The footer on an even page.
% \end{description}
%
%  We classify users according to the \LaTeX3 terminology as a) programmers b) template designers
%  and c) authors.
%
% \subsection{Author}
%  We assume that the author has an exising template which she is using but might want to do
%  some minor modifications, for example use an italic shape for the font of the mark, but an 
%  upright font for the page numbers. 
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{|
%~~~~~~~~\textit{header even}~~|format          = apa,|
%~~~~~~~~\textit{header even mark} |font-size   = Large,|
%~~~~~~~~\textit{header even mark} |font-family = serif,|
%~~~~~~~~\textit{header even mark} |font-weight = normal,|
%~~~~~~~~\textit{header even mark} |font-shape  = italic,|  
%~~~~~|}|
%}  
%
% We follow the idea of representing the basic elements of documents
% as elements, each one having a parent in order to specify
% the element we need to style as accurate as possible. One can think of
% this approach being congruent with objects in other languages.
% As a matter fact nothing stops us from defining a key value
% interface as shown below.
%
% {\obeylines 
%~~ |\cxset|
%~~~~~|{| 
%~~~~~~~~\textit{header.even.mark.font.size}   = |Large,|
%~~~~~~~~\textit{header.even.mark.font.family} = |serif,|
%~~~~~|}|
%}  
%
% This would pehaps make it easier for the tempalte designer, but I have rejected
% the idea as my aim is to make it easy for the author, who can search the template
% and just enter a couple of new proerty values.
%
% \subsection{Template designer}
% \pagestyle{headings}
% The template designer in the example above would have selected the format style
% from a number of predefined formats (templates) or would have created a style
% called \textit{apa} from an existing template and modified it using declarative
% key style.
%
% \subsection{The programmer}
%
% The programmer in the example above could have created the basic format
% \textit{apa} by using both declarative as well as defining or using existing
% macros. To the programmer we offer an extension mechanism, where the contents
% of a |ps@| command are defined. For example teh programmer can define a new
% style using \tikzname, but without having to worry about defining full |ps@|
% and their interface.
%
% \section{Canned Templates}
%
% Luckily the available permutations for headers and footers are less than the
% variations one sees in headings. Our approah here is to create |ps@| like
% commands to cover most use cases. We are interested in defining these structurally
% and leave the font and colour styling to the the key value interface.
%
% \begin{enumerate}
%  \item Redefine \textit{plain,headings,myheadings} to add appropriate hooks
%        for styling and rules.
%  \item Provide in addition 5-10 other styles to cover all the needs of the
%        hundred or so designs we provide with the \pkgname{phd} package.
% \end{enumerate}
%
% \subsection{Mark composition}
%
% A mark can either be a \docAuxCommand{leftmark} or a \docAuxCommand{rightmark}. They
% are normally composed of the title of a heading and the page number styled in 
% numerous ways. We need to make allowances as to how to handle different type 
% of mark combinations. Sometimes they include dates, revision numbers, author name, title or short title, logos and even images or links. The latter offers a very user 
% friendly way to navigate through a book's sections.
%
% \section{Introduction}
%  This manual is typeset according to the conventions of the
% \LaTeX{} \textsc{docstrip} utility which enables the automatic
% extraction of the \LaTeX{} macro source files~\cite{GOOSSENS94}.
%    \begin{macrocode}
%<*RH>

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{phd-runningheads}%
  [2015/13/06 v1.0 Running heads styling]%
%    \end{macrocode}
%
% \section{Marks and pagestyles}
% 
% We first define a number of commonly used headings and then we add some keys
% to make them more flexible. The package happily coexists with \pkgname{fancyhdr}
% so you can define your own if you want.
% 
%    \begin{macrocode}
\global\let\tikz@ensure@dollar@catcode=\relax
%    \end{macrocode}
%
% We define a handler to handle the choice keys for what goes in the center left or right
% of a header or footer.
% 
%    \begin{macrocode}
\ExplSyntaxOn
    \pgfkeys{/handlers/.mark/.code = 
    \pgfkeysalso
      {
        \pgfkeyscurrentpath/.code=
           \str_case_x:nnTF {##1}  
             {
               { none           } { \tl_gset:cn  {#1} { \empty}          } 
               { leftmark       } { \tl_gset:cn  {#1} { \leftmark     }  } 
               { rightmark      } { \tl_gset:cn  {#1} { \rightmark    }  } 
               { page           } { \tl_gset:cn  {#1} { \thepage      }  } 
               { today          } { \tl_gset:cn  {#1} { \today        }  } 
               { jobname        } { \tl_gset:cn  {#1} { \jobname      }  }
               { author         } { \tl_gset:cn  {#1} { \docauthoright }  }
             }
             {                         }
             {   \tl_gset:cn {#1} { } \tl_put_right:cn {#1} {##1}   }
     }   
   }   
% 
\dim_new:N \phd_headerwidth_dim
\dim_new:N \phd_footerwidth_dim
\ExplSyntaxOff
%
%
%
%    \end{macrocode}
%  As we are having three basic elements for every heading, this results in
%  12 sets of properties, i.e. if we target font weight, we need to allow for
%  odd pages, even pages and top and bottom. But we have left, center and 
%  right, hence  $4 \times 3 = 12$. An alternative way would be to target
%  the marks, however we are allowing for arbitrary text, fields such as jobname
%  and dates to be inserted, to cater for all the marks would be too tedious.
%
%  We also want to keep to the primary objectives of the phd package to provide
%  the user a set of keys that do not require macro mark-up. It ended up as tedious
%  and verbose, but by the time a full template is provided the user will see styles
%  rather than keys.
%  
% \begin{docCommand} {create_pagestyle_keys:n } { \marg{pagestyle name} }
%  Creates a standard set of keys for a |\pagestyle|. It takes the |\pagestyle|
%  name as its argument, which is used a prefix for the keys and the functions.
%  The same prefixing is later on used in the formatters and the |\pagestyle|
%  creation functions, thus enabling the automatic creation of new styles.
% \end{docCommand}
%    \begin{macrocode}    
\ExplSyntaxOn
\cs_new:Npn \create_pagestyle_keys:n #1 
  {
    \cxset
      {
        #1~even.header.left/.mark   = #1_even_header_left,
        #1~even~header~center/.mark = #1_even_header_center,
        #1~even~header~right/.mark  = #1_even_header_right,
        #1~even~footer~left/.mark   = #1_even_footer_left,
        #1~even~footer~center/.mark = #1_even_footer_center,
        #1~even~footer~right/.mark  = #1_even_footer_right,
        #1~even~header~background~color/.code = 
          \cs_set:cpn {#1_even_header_background_color}{##1},
        #1~even~footer~background~color/.code = 
          \cs_set:cpn {#1_even_footer_background_color}{##1},
          
        #1~even~header~frame~color/.code = 
          \cs_set:cpn {#1_even_header_frame_color}{##1},
        #1~even~footer~frame~color/.code = 
          \cs_set:cpn {#1_even_footer_frame_color}{##1},  

        #1~even~header~toprule/.code = 
          \cs_set:cpn {#1_even_header_toprule_dim}{##1},
        #1~even~footer~toprule/.code = 
          \cs_set:cpn {#1_even_footer_toprule_dim}{##1}, 
          
        #1~even~header~bottomrule/.code = 
          \cs_set:cpn {#1_even_header_bottomrule_dim}{##1},
        #1~even~footer~bottomrule/.code = 
          \cs_set:cpn {#1_even_footer_bottomrule_dim}{##1},                                                      
          
%          
        #1~even~header~left~font-family/.fontfamily   = #1_even_header_left_fontfamily, 
        #1~even~header~left~font-size/.fontsize       = #1_even_header_left_fontsize, 
        #1~even~header~left~font-weight/.fontweight   = #1_even_header_left_fontweight,  
        #1~even~header~left~font-shape/.fontstyle     = #1_even_header_left_fontshape,
%         
        #1~even~header~center~font-family/.fontfamily = #1_even_header_center_fontfamily, 
        #1~even~header~center~font-size/.fontsize     = #1_even_header_center_fontsize, 
        #1~even~header~center~font-weight/.fontweight = #1_even_header_center_fontweight,  
        #1~even~header~center~font-shape/.fontstyle   = #1_even_header_center_fontshape,
%          
        #1~even~header~right~font-family/.fontfamily  = #1_even_header_right_fontfamily, 
        #1~even~header~right~font-size/.fontsize      = #1_even_header_right_fontsize, 
        #1~even~header~right~font-weight/.fontweight  = #1_even_header_right_fontweight,  
        #1~even~header~right~font-shape/.fontstyle    = #1_even_header_right_fontshape,         
%        
        #1~odd~header~left/.mark    = #1_odd_header_left,
        #1~odd~header~center/.mark  = #1_odd_header_center,
        #1~odd~header~right/.mark   = #1_odd_header_right,
        #1~odd~footer~left/.mark    = #1_odd_footer_left,
        #1~odd~footer~center/.mark  = #1_odd_footer_center,
        #1~odd~footer~right/.mark   = #1_odd_footer_right,        
        #1~odd~header~background~color/.code = 
          \cs_set:cpn {#1_odd_header_background_color}{##1},
        #1~odd~footer~background~color/.code = 
          \cs_set:cpn {#1_odd_footer_background_color}{##1},     
%        
        #1~odd~header~frame~color/.code = 
          \cs_set:cpn {#1_odd_header_frame_color}{##1},
        #1~odd~footer~frame~color/.code = 
          \cs_set:cpn {#1_odd_footer_frame_color}{##1}, 
          
        #1~odd~header~toprule/.code = 
          \cs_set:cpn {#1_odd_header_toprule_dim}{##1},
        #1~odd~footer~toprule/.code = 
          \cs_set:cpn {#1_odd_footer_toprule_dim}{##1},  
          
        #1~odd~header~bottomrule/.code = 
          \cs_set:cpn {#1_odd_header_bottomrule_dim}{##1},
        #1~odd~footer~bottomrule/.code = 
          \cs_set:cpn {#1_odd_footer_bottomrule_dim}{##1},                                                                                            
            
        #1~odd~header~left~font-family/.fontfamily   = #1_odd_header_left_fontfamily, 
        #1~odd~header~left~font-size/.fontsize       = #1_odd_header_left_fontsize, 
        #1~odd~header~left~font-weight/.fontweight   = #1_odd_header_left_fontweight,  
        #1~odd~header~left~font-shape/.fontstyle     = #1_odd_header_left_fontshape,
%         
        #1~odd~header~center~font-family/.fontfamily = #1_odd_header_center_fontfamily, 
        #1~odd~header~center~font-size/.fontsize     = #1_odd_header_center_fontsize, 
        #1~odd~header~center~font-weight/.fontweight = #1_odd_header_center_fontweight,  
        #1~odd~header~center~font-shape/.fontstyle   = #1_odd_header_center_fontshape,
%          
        #1~odd~header~right~font-family/.fontfamily  = #1_odd_header_right_fontfamily, 
        #1~odd~header~right~font-size/.fontsize      = #1_odd_header_right_fontsize, 
        #1~odd~header~right~font-weight/.fontweight  = #1_odd_header_right_fontweight,  
        #1~odd~header~right~font-shape/.fontstyle    = #1_odd_header_right_fontshape,               
  }  
}

  
\cs_new:Npn \set_pagestyle_key_defaults:n #1 
 {  
  \cxset
  { 
    #1~even.header.left             = page,
    #1~even~header~center           = none,
    #1~even~header~right            = rightmark, 
    #1~even~footer~left             = page,
    #1~even~footer~center           = none,
    #1~even~footer~right            = ,
    #1~odd~header~left              = leftmark,
    #1~odd~header~center            = none,
    #1~odd~header~right             = page, 
    #1~odd~footer~left              = today,
    #1~odd~footer~center            = none,
    #1~odd~footer~right             = none,  
% bg colors    
    #1~odd~header~background~color  = spot!15,
    #1~odd~footer~background~color  = white,
    #1~even~header~background~color = magenta!15,
    #1~even~footer~background~color = magenta!15,
% frame colors    
    #1~odd~header~frame~color       = spot!15,
    #1~odd~footer~frame~color       = spot!15,
    #1~even~header~frame~color      = magenta!15,
    #1~even~footer~frame~color      = magenta!15,    
% toprule
    #1~odd~header~toprule  = 2pt,
    #1~odd~footer~toprule  = 2pt,
    #1~even~header~toprule = 2pt,
    #1~even~footer~toprule = 2pt,   
% bottomrule
    #1~odd~header~bottomrule  = 0pt,
    #1~odd~footer~bottomrule  = 0pt,
    #1~even~header~bottomrule = 0pt,
    #1~even~footer~bottomrule = 0pt,          
% fonts
    #1~even~header~left~font-family = sffamily, 
    #1~even~header~left~font-weight = bfseries, 
    #1~even~header~left~font-size   = small, 
    #1~even~header~left~font-shape  = upshape,  
%
    #1~even~header~center~font-family = sffamily, 
    #1~even~header~center~font-weight = bfseries, 
    #1~even~header~center~font-size   = small, 
    #1~even~header~center~font-shape  = italic,   
%
    #1~even~header~right~font-family = sffamily, 
    #1~even~header~right~font-weight = bfseries, 
    #1~even~header~right~font-size   = small, 
    #1~even~header~right~font-shape  = italic, 
%
% fonts
    #1~odd~header~left~font-family   = sffamily, 
    #1~odd~header~left~font-weight   = bfseries, 
    #1~odd~header~left~font-size     = scriptsize, 
    #1~odd~header~left~font-shape    = upshape,  
%
    #1~odd~header~center~font-family = sffamily, 
    #1~odd~header~center~font-weight = bfseries, 
    #1~odd~header~center~font-size   = small, 
    #1~odd~header~center~font-shape  = italic,   
%
    #1~odd~header~right~font-family  = sffamily, 
    #1~odd~header~right~font-weight  = bfseries, 
    #1~odd~header~right~font-size    = small, 
    #1~odd~header~right~font-shape   = upshape,                 
   }   
}
 

\ExplSyntaxOff   


%    \begin{macrocode}
\cxset{pagestyle/.code=\pagestyle{#1}}
%cxset{pagestyle=ruled-01}
%

          
\newif\ifphd@multisty \phd@multistyfalse
\newcommand\copyrightline[1]{%
  \def\@copyrightline{#1}}

%\edef\@copyrightline{\copyright Y Lazarides\relax}
\edef\@copyrightline{}
\newcommand\c@pyrightline[1]{%
  \gdef\@c@pyrightline{#1}}

\gdef\@c@pyrightline{%
  \vbox to 5.5\p@{\noindent
  \parbox[t]{\textwidth}{\normalfont\footnotesize\baselineskip 9\p@
  \@copyrightline
  }%
  \vss}%
}
%    \end{macrocode}
%    
% \section{Formatters}
%  We wish to leave the original plain definition untouched. The command
%  clears the headers and set the footers to just print the page number
%  at the margins. We allow for rules.
% 
% 
%    \begin{macrocode}
\ExplSyntaxOn
\let\ps@plainltx\ps@plain
\dim_new:N  \even_offset_l 
\dim_set:Nn \even_offset_l {0pt}
\dim_new:N  \even_offset_r
\dim_set:Nn \even_offset_r {0pt}
\dim_gzero_new:N \header_width_dim
\dim_set_eq:NN \header_width_dim \textwidth

\tl_new:N \leftglue
\tl_new:N \rightglue 
%
%    \end{macrocode}
% \begin{docCommand} {format_running_head_box} { \marg {prefix} \marg{} \marg{} \marg{} }
%   The general formatter for heads.
%
%   |#1| outer box style\\
%   |#2| page box style\\
%   |#3| left glue\\
%   |#4| right glue
%
% \end{docCommand}
%    \begin{macrocode}
\newtcbox{\headerbox}[1]%
  {
     nobeforeafter,
     size     = minimal,
     width    = \header_width_dim-8pt, 
     colback  = \cs_if_exist_use:cTF {#1background_color} { } {blue},  
     colframe = \cs_if_exist_use:cTF {#1frame_color} { } {blue},
     box~align= base, 
     toprule  = \cs_if_exist_use:cTF {#1toprule_dim} { } {0pt},
     bottomrule=\cs_if_exist_use:cTF {#1bottomrule_dim} { } {3pt},
    % arc=1mm,
     boxsep=3pt,
    % rounded~corners=all,
    % drop~shadow=black,
  }
  
\newtcbox{\headerboxleft}[1]%
  {
     nobeforeafter,
     size=minimal,
     width=\header_width_dim, 
     colback=  \cs_if_exist_use:cTF {#1background_color} { } {blue},  
     colframe=white,
     box~align=base,
%     arc=2mm,boxsep=3mm,
%     rounded~corners=all,
%     drop~shadow=black,
  } 
\newtcbox{\headerboxcenter}[1]%
  {
     nobeforeafter,
     size=minimal,
     width=\header_width_dim, 
     colback=   \cs_if_exist_use:cTF {#1background_color} { } {blue}, 
     colframe=white,
     box~align=base,
%     arc=2mm,boxsep=3mm,
%     rounded~corners=all,
%     drop~shadow=black,
  }  
\newtcbox{\headerboxright}[1]%
  {
     nobeforeafter,
     size=minimal,
     width=\header_width_dim, 
     colback=    \cs_if_exist_use:cTF {#1background_color} { } {blue}, 
     colframe=black,
     box~align=base,
     %arc=2mm,
     %rounded~corners=all,
     %drop~shadow=black,
  } 
%    \end{macrocode}
% 
%  \begin{docCommand} { set_header_font_aux:n  }  {  \marg{prefix}  }
%   Internal auxiliary function for setting fonts.
%  \end{docCommand}
%
%    \begin{macrocode}
\cs_new:Npn \set_header_font_aux:n #1
 {
   \cs_if_exist_use:c { #1_fontfamily }
   \cs_if_exist_use:c { #1_fontweight }
   \cs_if_exist_use:c { #1_fontshape  }
   \cs_if_exist_use:c { #1_fontsize   }
 }
      
\cs_new:Npn \format_running_head_box #1 #2 #3 #4
  { %\tikz[remember~picture,overlay,<->] \draw (-1,0)-- (-1,-5);
   % \tikzi[hookleft]
    \dim_add:Nn \header_width_dim {\even_offset_l + \even_offset_l}
    \skip_horizontal:n {-\dim_use:N \even_offset_l}
      \headerbox{#1}
       { 
         
         \hss\hbox_to_wd:nn \header_width_dim 
         { 
           \headerboxleft {#1}
             { 
               \set_header_font_aux:n { #1left            }
               \cs_if_exist_use:c   { #1left            }
             }
             \hss
             \headerboxcenter {#1}
                {
                 \set_header_font_aux:n   { #1center        }
                 \cs:w #1center \cs_end:
                }  
             \hss
             \headerboxright {#1}
                {
                  \set_header_font_aux:n   { #1right        }
                  \cs:w #1right \cs_end:
                }
          }
      }
  }



\newcommand*{\ps_aux}[2]
  {
      
    \renewcommand*{\@evenhead}
      { 
        \cs:w format_running_head_#1 \cs_end: {#2_even_header_} {} {} {}
      } 
    
    \renewcommand*{\@oddhead}
      { 
        \cs:w format_running_head_#1\cs_end:  {#2_odd_header_} {} {} {}
      } 
      
    \renewcommand*{\@evenfoot}
      { 
        \cs:w format_running_head_#1\cs_end: {#2_even_footer_} {} {} {}
      } 
       
    \renewcommand*{\@oddfoot}
      { 
        \cs:w format_running_head_#1\cs_end: {#2_odd_footer_} {} {} {}
      }
%      
  \cs_set:Npn \sectionmark##1{##1}
  \def\sectionmark##1
    {
    \markright{\ifnum \c@secnumdepth >\z@
    \thesection\enskip\fi ##1}}%
 }
%    \end{macrocode}
% 
% \begin{docCommand} {make_ps} { \marg{style name}  \marg{format name} }
%  A generic function for creating new pagestyles. The function takes the pagestyle name as its
%  argument and calls an auxilairy function to create the |ps@| command. The 
%  second argument is a unique renderer name.  
% \end{docCommand}
%
%    \begin{macrocode} 
\cs_gset:Npn \make_ps #1 #2
  {
     \cs_gset:cpn {ps@#1} 
       {
           \ps_aux{#2}{#1}
       }
  }   
 
\create_pagestyle_keys:n {headings}
\set_pagestyle_key_defaults:n {headings}
\make_ps {headings} {box}

\create_pagestyle_keys:n {plainx} 
\set_pagestyle_key_defaults:n {plainx}
\make_ps {plainx} {box}


%\create_pagestyle_keys:n {headings} 
%\set_pagestyle_key_defaults:n {headings}
 
\ExplSyntaxOff
%    \end{macrocode} 
%   
%    \pagestyle{headings}
%\section{A vertical rule heading}
%
% Provides a vertical rule (for style 22)
% 
%    \begin{macrocode}
\def\ps@verticalrule{\leftskip\z@\let\@mkboth\@gobbletwo\vfuzz=5\p@
    \def\@oddhead{}%
    \def\@evenhead{}%
    
\def\@oddfoot{\verbatimsize
    \parbox[t]{\textwidth}{
    \vspace{15pt}%
      \global\hoffset=0pc%
      \noindent\hbox to\textwidth{\hbox to 0pt{\rule{1pt}{\textheight}\color{blue}\thepage}}
      \makebox[\z@][l]{\@c@pyrightline}%
%     \noindent\hspace*{-9pc}\rule{37pc}{0.25pt}%
    }%
  }%
  
  \def\@evenfoot{\verbatimsize
    \vbox{\vspace{15pt}%
   % \global\hoffset=6pc%
    \noindent\hbox to\textwidth{{\color{blue}\rmfamily
    \thepage}\hfill\makebox[0pt][l]{\rule{1pt}{30pt}}}
    \makebox[\z@][l]{\@c@pyrightline}%
%   \noindent\rule{37pc}{0.25pt}%
    }%
  }%
  \def\sectionmark##1{}%
  \def\subsectionmark##1{}%
%
%
%  
 }
%    \end{macrocode}
%
%
%  \end{document}
% \section{The pagestyle headings}
% This is one of the most common headings. We provide a full |ps@| function for
% speed utilizing only some parameters. The \refCom{sectionmark} is inserted
% by \tex's inserts mechanism, during the section typesetting.
%   
% \section{Centered headings}
% 
%  \begin{docCommand}{ps@centerheadings } { \meta{void} }
%   Provides centered headings. Puts the section mark at the middle
%  of the header and the page at the right or left.
% \end{docCommand}
% 
%    \begin{macrocode}
%\def\ps@centerheadings{%
% \let\@mkboth=\markboth
% \def\@evenfoot{}
%  \def\@oddfoot {}
%  
%  \def\@evenhead{
%   \verbatimsize
%    \vbox{
%     \tikzi[even center]
%     \noindent
%     \global\hoffset=0pc
%      \mbox{\rm \thepage}%
%      \it \strut
%       \leftmark\hfill\hbox{}%\par\vbox to 13pt{}%
%%    \noindent\rule{37pc}{0.25pt}%
%    }%
%  }%
%  \def\@oddhead{
%    \vbox{%
%    \tikzi[odd center]
%     \global\hoffset=0pc
%    \noindent\hfill
%    \mbox{}\it 
%    \verbatimsize
%    \rightmark\hfill\hbox{}
%      \makebox[\z@][r]{\rm
%      \thepage}\par\nointerlineskip%
%      \vskip0pt
%    \noindent\hspace*{0pc}\rule{37pc}{0.25pt}%
%     }%
%  }%
%  
%  \def\chaptermark##1{\markboth{##1}{##1}}
%  
%  \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
%    \thesection\enskip\fi ##1}}%
%   \def\chaptermark##1{\markboth{##1}{##1}}
%   \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
%      \thesection\hspace{0.5em}\fi ##1}}%
%}
%    \end{macrocode}

% \section{Flush headings}
% 
%  \begin{docCommand}{ps@flush} { \meta{void} }
%    Provides centered headings. Puts the section mark at the middle
%    of the header and the page at the right or left.
%  \end{docCommand}
% 
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \ps@flush
  { 
     \let\@mkboth=\markboth
     \def\@evenfoot{}
     \def\@oddfoot {}
     \def\@evenhead{}
     \def\@oddhead {}
     \def\@evenhead{
         \verbatimsize
         \parbox[t]{\textwidth}{
         \tikzi[even flush]
          \noindent
           \mbox{
             \rm \thepage}%
             \it \strut
            \enskip\leftmark
            \hfill\hbox{}
             }%
      }%
  
\def\@oddhead
  {
     \hbox:n
       {
         \rlap{\parbox[t]{\textwidth}
          {
            % \tikzi[odd flush]
             \noindent\hfill\hfill
              \mbox{} 
              \verbatimsize \rm
              \rightmark\hbox{}
              \mbox{
                 \rm
                 \space/\thinspace
                 \thepage
                }
%               \par\nointerlineskip%
%               \vskip0pt
%               \noindent\hspace*{0pc}\rule{\textwidth}{0pt}%
          }
       }  
    }%
  }
  
 \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
        \thesection\enskip\fi ##1}}%
        
 %\def\chaptermark##1{\markboth{##1}{}}

 \def\sectionmark##1{\markright{\ifnum \c@secnumdepth >\z@
     \sectionname \enspace \thesection\hspace{0.5em}\fi ##1}}%
      
\ExplSyntaxOff      
}
%    \end{macrocode}

% \section{Chaperstyle heading}    
% 
%  This style provides a special heading to be used on chapter opening pages only.
%  \tcbdocmarginnote[width=2cm]{U 20-6-2015}
%  
%    \begin{macrocode}
\def\ps@chapterstyle{%
    \let\@oddfoot\@empty\let\@evenfoot\@empty
    \def\@evenhead{\thepage\hfil\slshape\leftmark}%
    \def\@oddhead{{\slshape\rightmark}\hfil\thepage}%
    \let\@mkboth\@gobbletwo
    \let\chaptermark\@gobble
    \let\sectionmark\@gobble}
%    \end{macrocode}
%
%
% 
% \section{Myheadings}
%
% \begin{docCommand}{ps@myheadings} {\meta{void}}
%   The classic myheadings macro, with some parameters!
% \end{docCommand}
%    \begin{macrocode}
\ExplSyntaxOn
\cs_set:Npn \ps@myheadings 
  {
    \let\@mkboth=\@gobbletwo
    \def\@evenfoot{Even page note 2}
    \def\@oddfoot {Odd page note 1}
    
    \def\@evenhead
    {
      \verbatimsize
      \vbox:n
        {  
          \global\hoffset=6pc\noindent
         \makebox[\z@][l]{\rm \thepage}%
         \upshape \strut\hfill\leftmark\hbox{}%\par\vbox to 13pt{}%
         \noindent\rule{37pc}{0.25pt}%
        }%
    }%
% for one side or both sides    
  \def\@oddhead{\verbatimsize
    \vbox:n 
      {
        \global\hoffset=0pc\noindent
        \tcbox[width=\textwidth]{\upshape\strut\rightmark\hfill\hbox{}\makebox[\z@][r]{\rm
        MHEADINGS  \thepage}%\par\vbox to 13pt{}%
        \vspace{1pt}
     \noindent\hspace*{-9pc}\rule{37pc}{0.25pt}%
      }%
  }%
%
    \def\chaptermark##1{}
    \def\sectionmark##1{}
    \def\subsectionmark##1{}
   }
 }
\ExplSyntaxOff 
%    \end{macrocode}
%
% \section{Watermarks}

% Some special styles
%    \begin{macrocode}
\IfFileExists{changepage.sty}{\RequirePackage{changepage}}{}
\IfFileExists{rotating.sty}{\RequirePackage{rotating}}{}
%    \end{macrocode}
%
% {even@samplepage}
% {odd@samplepage}
%    \begin{macrocode}
\def\even@samplepage{%
 \begin{picture}(0,0)
   \put(\Xeven,\Yeven){\turnbox{90}{\Huge \textcolor{\watermark@textcolor}{\watermark@text}}}
\end{picture}
}
%% Define a macro to print SAMPLE PAGE IN THE MARGIN
\def\odd@samplepage{%
 \begin{picture}(0,0)
   \put(\Xodd,\Yodd){\turnbox{90}{\Huge \textcolor{\watermark@textcolor}{\watermark@text}}}
 \end{picture}
}
%    \end{macrocode}
% 
% 

% \section{watermarktext}
%  Define the watermark words
%    \begin{macrocode}
\gdef\watermarktext#1{\gdef\watermark@text{\fontfamily{phv}\selectfont#1}}
\def\watermarktextcolor#1{\gdef\watermark@textcolor{#1}}
\watermarktext{SAMPLE PAGE}
\watermarktextcolor{black!50}
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\ps@samplepage{\let\@mkboth\@gobbletwo
 \let\@oddhead\odd@samplepage\def\@oddfoot{\reset@font\hfil\thepage}
 \let\@evenhead\even@samplepage\def\@evenfoot{\reset@font\thepage\hfil}}
%
% We define two macros to position the watermark on the page
\def\Xodd{480}
\def\Xeven{-15}\def\Yeven{-810}
\def\Yeven{-\expandafter\strip@pt\textheight}
\let\Yodd\Yeven


\cxset{blank page text/.store in=\blankpagetext@cx{#1}}
\cxset{blank page text={}}

\def\cleardoublepage{\clearpage\if@twoside\ifodd\c@page\else
  \hbox{}
  \vspace*{\fill}
  \begin{center}
     \blankpagetext@cx      
  \end{center}
  \vspace{\fill}
  \thispagestyle{empty}
  \newpage
  \if@twocolumn\hbox{}\newpage\fi\fi\fi}
%    \end{macrocode}
%</RH>       
%
% \pagestyle{flush}
% \section{Test myheadings}
% \lipsum[1-3] 
% \section{my headings 1}
% \lipsum [4-7]
% \section{my headings 2}
% \lipsum [4-7]
% \section{Another one}
%  \makeatletter  
%    \@oddhead
%
%    \@evenhead
% \lipsum [4-5]
% \section{test}
%
%  \makeatletter  
%    \@oddhead
%
%    \@evenhead
% \makeatother
%
% \leftmark\\
% \rightmark\\
%
\endinput
% \bibliographystyle{alpha}
% \begingroup
% \raggedright
%
% \begin{thebibliography}{GMSN94A}
%
% \bibitem[GMS94]{GOOSSENS94}
% Michel Goossens, Frank Mittelbach, and Alexander Samarin.
% \newblock {\em The LaTeX Companion}.
% \newblock Addison-Wesley Publishing Company, 1994.
%

%
% \end{thebibliography}
% \endgroup
%
% \PrintIndex
% \Finale
\endinput


